<!DOCTYPE html>
<html>
<head>
<title>个人分享</title>
<meta charset="utf-8" />
<link href="../assets/css/font-awesome.min.css" rel="stylesheet">
<!--[if IE 7]>
    <link rel="stylesheet" href="../assets/css/font-awesome-ie7.min.css">
<![endif]-->
<script type="text/javascript" src="../assets/js/jquery-1.9.1.min.js"></script>

<script type="text/javascript" src="jquery.min.js"></script>
<script type="text/javascript" src="pageoffice.js" id="po_js_main"></script>

<!--bootstrap-table-->
<script type="text/javascript" src="../assets/js/bootstrap/bootstrap-table.js"></script>
<link rel="stylesheet" href="../assets/css/bootstrap/bootstrap-table.css">
<script src="../assets/js/bootstrap/bootstrap-table-pagejump.js"></script>
<link href="../assets/css/bootstrap/bootstrap-table-pagejump.css" rel="stylesheet">
<link href="../assets/css/bootstrap/bootstrap.min.css" rel="stylesheet">
<script src="../assets/js/bootstrap/bootstrap.min.js"></script>
<script type="text/javascript" src="../assets/js/alldata.js"></script>
<script src="../assets/js/vue/vue.js"></script>

<link rel="stylesheet" href="../assets/css/bootstrap/bootstrap-dialog.css">
<script type="text/javascript" src="../assets/js/bootstrap/bootstrap-dialog.js"></script>

<link rel="stylesheet" href="../assets/css/newstyle.css">
<script src="../assets/js/laydate/laydate.js"></script>
<link rel="stylesheet" href="../assets/css/zTreeStyle.css"
	type="text/css">
<script type="text/javascript" src="../assets/js/jquery.ztree.core.js"></script>
<script type="text/javascript"
	src="../assets/js/jquery.ztree.excheck.js"></script>
<script type="text/javascript" src="../assets/js/jquery.ztree.exedit.js"></script>
<style type="text/css">
/* body a:hover{color:#0085ff !important;} */
.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus {
	background: rgb(0, 133, 255);
	color:#333 !important;
	}
.ztree li .curSelectedNode span:last-child {
    background-color: #4fc1e9;
    color: #fff;
}
	#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-left>.page-list{
display: none !important;
}
#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination-jump{
display: none !important;
}
#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-item{
display: none !important;
}
#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-pre,.page-next{
display: inline !important;
}
#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-next{
display: inline !important;
}

#div_user>.bootstrap-table>.fixed-table-pagination>.pull-left>.page-list{
display: none !important;
}
#div_user>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination-jump{
display: none !important;
}
#div_user>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-item{
display: none !important;
}
#div_user>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-pre,.page-next{
display: inline !important;
}
#div_user>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-next{
display: inline !important;
}
</style>
</head>
<script>
//获取登录者信息
var sessionUser;
$.ajax({
	type : "post",
	url : "/getSessionByIp",
	async : false,
	success : function(data) {
		sessionUser=data
	}
})
var lang = getUrlParam("lang");
var columns,usercolumns;
var deptdata;
var tabledata = [];
if (lang != "en_US") {
	usercolumns = [ [ {
		field : 'ck',
		checkbox : true,
		width : '1%'
	}, {
		field : 'username',
		title : '姓名',
		width : '20%'
	} ,{
		field : 'deptname',
		title : '部门',
		width : '20%'
	} ] ]
columns = [ [  {
	field : 'files.fileId',
	title : '#',
	width : '1%',
	cellStyle : function(row, index) {
		var style = {};
		style = {
			css : {
				'display' : 'none'
			}
		};
		return style;
	}
},  {
	field : 'messageId',
	title : '#',
	width : '1%',
	cellStyle : function(row, index) {
		var style = {};
		style = {
			css : {
				'display' : 'none'
			}
		};
		return style;
	}
},{
	field : 'ck',
	checkbox : true,
	width : '1%'
}, {
	title : '#',
	field : '',
	width : '1%',
	formatter : function(value, row, index) {
		return index + 1;
	}
},{
	field : 'files.fileName',
	title : '名称',
	width : '20%',
	formatter : forma
},  {
	field : 'files.security.securityName',
	title : '密级',
	width : "5%"
}, {
	field : 'messageDate',
	title : '分享时间',
	width : '10%'
}, {
	field : 'received.username',
	title : '接收者',
	width : '10%'
}] ]
document
.write("<script src='../assets/js/bootstrap/bootstrap-table-zh-CN.js' >"
		+ "<" + "/script>");
}else{
	usercolumns = [ [ {
		field : 'ck',
		checkbox : true,
		width : '1%'
	}, {
		field : 'username',
		title : 'UserName',
		width : '20%'
	} ,{
		field : 'deptname',
		title : 'DeptName',
		width : '20%'
	} ] ]
	columns = [ [  {
	field : 'files.fileId',
	title : '#',
	width : '1%',
	cellStyle : function(row, index) {
		var style = {};
		style = {
			css : {
				'display' : 'none'
			}
		};
		return style;
	}
},  {
	field : 'messageId',
	title : '#',
	width : '1%',
	cellStyle : function(row, index) {
		var style = {};
		style = {
			css : {
				'display' : 'none'
			}
		};
		return style;
	}
},{
	field : 'ck',
	checkbox : true,
	width : '1%'
}, {
	title : '#',
	field : '',
	width : '1%',
	formatter : function(value, row, index) {
		return index + 1;
	}
},{
	field : 'files.fileName',
	title : 'FileName',
	width : '20%',
	formatter : forma
}, {
	field : 'files.security.securityName',
	title : 'Security',
	width : "5%"
}, {
	field : 'messageDate',
	title : 'Date',
	width : '10%'
}, {
	field : 'received.username',
	title : 'Received',
	width : '10%'
}] ]}
var categories = document.getElementsByName("categories");
var dataAlias;
var settingUser = { //此处根据自己需要进行配置
		view : {
			selectedMulti : false, //设置是否能够同时选中多个节点
			showIcon : true, //设置是否显示节点图标
			ShowPlusMinus : false,
			showLine : true, //设置是否显示节点与节点之间的连线
			showTitle : false, //设置是否显示节点的title提示信息
		},
		data : {
			simpleData : {
				enable : true
			}
		},
		callback : {
			onClick : zTreeOnClickRight
		}
	};
//树的单击事件
function zTreeOnClickRight(event, treeId, treeNode) {
	var getSelectRows = $("#tb_order").bootstrapTable('getSelections',
			function(row) {
				return row;
			});
	var ids = [];
	var menuIds = [];
	for (var i = 0; i < getSelectRows.length; i++) {
		ids.push(getSelectRows[i].files.security.securityId)
		menuIds.push(getSelectRows[i].files.menu.id)
	}
	console.log(ids)
	var max = ids[0];
	var len = ids.length; 
	for (var i = 1; i < len; i++){ 
	if (ids[i] > max) { 
	max = ids[i]; 
	} 
	} console.log(max)
	console.log(unique(menuIds))
	if(treeId=="deptTree"){
	if(max!=undefined&&menuIds.length>0){
		getUserData(treeNode.name,max,unique(menuIds));
	}
	}
}
$(function() {
	deptData()
	$("#tb_user").bootstrapTable({
		data : tabledata,
		cache : false, // 是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
		pagination : true, //是否显示分页（*）
		paginationShowPageGo : true,
		pageNumber : 1, //初始化加载第一页，默认第一页
		pageSize : 5, //每页的记录行数（*）
		pageList : [ 10, 15, 20, 30, 50 ], //可供选择的每页的行数（*）
		clickToSelect : true, //是否启用点击选中行
		sortable : false, //是否启用排序
		//sortOrder : "asc", //排序方式
		sidePagination : "client", //分页方式：client客户端分页，server服务端分页（*）
		queryParamsType : '',
		queryParams : function(params) {//自定义参数，这里的参数是传给后台的，我这是是分页用的
			return {//这里的params是table提供的
				username : $("#nameInput").val(),
				pageNumber : params.pageNumber,
				pageSize : params.pageSize
			};
		},
		columns : usercolumns
	})
		$("#tb_deptUser").bootstrapTable({
		cache : false, // 是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
		pagination : true, //是否显示分页（*）
		paginationShowPageGo : true,
		pageNumber : 1, //初始化加载第一页，默认第一页
		pageSize : 5, //每页的记录行数（*）
		pageList : [ 10, 15, 20, 30, 50 ], //可供选择的每页的行数（*）
		clickToSelect : true, //是否启用点击选中行
		sortable : false, //是否启用排序
		//sortOrder : "asc", //排序方式
		sidePagination : "client", //分页方式：client客户端分页，server服务端分页（*）
		queryParamsType : '',
		search : true,
		columns : usercolumns
		//onDblClickRow: function (row) {
	    //    $('#tb_user').bootstrapTable('append', row);
		//}
	})
	/* $.ajax({
		type : 'POST',
		url : "/getUserButton",
		data : {
			userId : sessionUser.userId
		},
		async : false,
		dataType : "json",
		success : function(data) {
			if (data != null) {
				for (var i = 0; i < data.length; i++) {
					if (data[i].btnName == '删除') {
						$("#btn_delete").css("display", "");
					}
					if (data[i].btnName == '下载') {
						$("#btn_down").css("display", "");
					}
				}
			}
		}
	}) */
	dataAll("/pageSharer");
	dataAlias = aliasByUser();
	
});

//初始化表格
function dataAll(dataUrl) {
	$("#tb_order").bootstrapTable('refresh');
	$("#tb_order").bootstrapTable({
		url : dataUrl,
		method : "post", //请求方式（*）
		contentType : "application/x-www-form-urlencoded",//post请求的话就加上这个句话
		toolbar : "#toolbar", //工具按钮用哪个容器
		cache : false, // 是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
		pagination : true, //是否显示分页（*）
		paginationShowPageGo: true,
		pageNumber : 1, //初始化加载第一页，默认第一页
		pageSize : 15, //每页的记录行数（*）
		pageList : [ 10, 15, 20 ,30,50], //可供选择的每页的行数（*）
		clickToSelect : true, //是否启用点击选中行
		sortable : false, //是否启用排序
		//sortOrder : "asc", //排序方式
		sidePagination : "server", //分页方式：client客户端分页，server服务端分页（*）
		queryParamsType : '',
		queryParams : function(params) {//自定义参数，这里的参数是传给后台的，我这是是分页用的
			return {//这里的params是table提供的
				selectName : $("#searchSelect").val(),
				selectVal : $("#val").val(),
				pageNumber : params.pageNumber,
				pageSize : params.pageSize
			};
		},
		columns : columns
	});
	$('#tb_order').children().children().children('th').eq(0).css("display","none")
	$('#tb_order').children().children().children('th').eq(1).css("display","none")
}
//获取用户的标签
function aliasByUser() {
	var aliasData;
	$.ajax({
		type : 'POST',
		url : "/aliasByUser",
		data : {
			userId : sessionUser.userId
		},
		async : false,
		success : function(data) {
			var result = createCategoryTree(data);
			aliasData = result;
			$("#categories").append(result);
			/*for(var i=0;i<categories.length;i++){
			$(categories[i]).append(result);
			}  */
		}
	})
	return aliasData;
}
//判断搜索值
function searchData() {
	var tableData;
	var val;
	var inputVal = document.getElementById("searchInput");
	var disVal = document.getElementById("children");
	var dateVal = document.getElementById("qBeginTime");
	var aliasVal = document.getElementById("alias2Id");
	if (inputVal.value != "") {
		console.log("文本框")
		val = inputVal.value;
	} else if (disVal.value != "") {
		console.log("二级")
		val = disVal.value;
	} else if (dateVal.value != "") {
		console.log("日期")
		val = dateVal.value;
	} else if (aliasVal.value != ""){
		console.log("标签")
		val=aliasVal.value;
	}
	if (val != "" && val != undefined) {
		$("#val").val(val);
	}else{
		$("#val").val('');
	}
}
//判断下拉框选中的值
function firstSel(province) {
	var inputNode = document.getElementById("searchInput");
	var disNode = document.getElementById("children");
	var date = document.getElementById("qBeginTime");
	var aliasNode = document.getElementById("menu");
	if (province.value == "securityId") {//选择文档密级
		inputNode.style.display = "none";
		disNode.style.display = "";
		date.style.display = "none";
		aliasNode.style.display = "none";
		date.value='';
		inputNode.value='';
			$("#alias2Id").val('');
		selData("/getSecurityAll", disNode, 0);
// 	} else if (province.value == "format") {//文档格式
// 		inputNode.style.display = "none";
// 		date.style.display = "none";
// 		disNode.style.display = "";
// 		aliasNode.style.display = "none";
// 		date.value='';
// 		inputNode.value='';
// 			$("#alias2Id").val('');
// 		selData("/listFormatAll", disNode, 1);
	} else if (province.value == "fileDate") {//日期
		date.style.display = "";
		inputNode.style.display = "none";
		disNode.style.display = "none";
		aliasNode.style.display = "none";
		inputNode.value='';
		disNode.value='';
			$("#alias2Id").val('');
	} else if (province.value == "alias") {//标签
		disNode.style.display = "none";
		date.style.display = "none";
		inputNode.style.display = "none";
		aliasNode.style.display = "inline";
		inputNode.value='';
		disNode.value='';
		date.value='';
	} else {
		console.log("文本框")
		disNode.style.display = "none";
		date.style.display = "none";
		inputNode.style.display = "";
		aliasNode.style.display = "none";
		disNode.value='';
		date.value='';
		$("#alias2Id").val('');
	}
}
//二层下拉框数据加载
function selData(url, node, index) {
	$.ajax({
		type : 'POST',
		url : url,
		async : true,
		success : function(data) {
			var option;
			if (index == 0) {
				option += "<option value='0'>请选择</option>";
				$.each(data, function(i, n) {//循环，i为下标从0开始，n为集合中对应的第i个对象
					option += "<option value='"+n.securityId+"'>"
							+ n.securityName + "</option>"
				});
			} else {
				if (data != null) {
					option += "<option value='0'>请选择</option>";
					$.each(data, function(i, n) {//循环，i为下标从0开始，n为集合中对应的第i个对象
						option += "<option value='"+n+"'>" + n
								+ "</option>"
					});
				}
			}
			node.innerHTML = option;//将循环拼接的字符串插入第二个下拉列表
		}
	});
}
//加载标签
var glb_str = "";
function createCategoryTree(data) {
	var flag;
	for (var i = 0; i < data.length; i++) {
		var nodeText = data[i]['aliasName'];
		var nodeId = data[i]['aliasId'];
		var children = data[i]['children'];
		//若有子分类，则遍历子分类
		if (children.length > 0) {
			flag = true;
			glb_str += "<li class='offset-right dropdown-submenu'><a class='category' " + "id=" + nodeId + " href='#'>"
					+ nodeText + "</a><ul class='dropdown-menu'>"
			createCategoryTree(children);
		} else {
			//若没有子分类
			flag = false;
			glb_str += "<li><a class='category' " + "id=" + nodeId
					+ " href='#' onclick='shows($(this),$(this).text(),"
					+ nodeId + ")'>" + nodeText + "</a>";
		}
		if (flag) {
			glb_str += "</ul></li>"
		} else {
			glb_str += "</li>";
		}
	}
	return glb_str;
}
//选中标签点击事件
function shows(node, text, id) {
	console.log(node);
	console.log(id);
	getPartent(node, text, id);
	$("#alias2Id").val(id);
}
function getPartent(node, text, id) {
	if (node[0].tagName != "DIV") {
		getPartent($(node).parent(), text, id);
	} else {
		node.children().eq(0).val(id);
		text += '<span class="caret" style="margin-left: 5px;color:#000"></span>';
		node.children().eq(1).html(text);
	}
}
//搜索文件名称字体变红
function forma(value, row, index) {
	if (row.files.fileName) {
		var namestr=row.files.fileName;
			if($("#searchInput").val()!=""){
				var array = namestr.split($("#searchInput").val());
				namestr="";
				for(var j = 0;j<array.length;j++){
					if(j==array.length-1){
						namestr+=array[j]
					}else{
						namestr+=array[j]+"<span style='color:red;'>"+$("#searchInput").val()+"</span>"
					}
				}
			}
		return "<a style='color: #1963AA;text-decoration: none;' href='javascript:void(0)' target='_blank' onclick='showfile(this)'>"
				+ namestr+ "<a/>";
	}
}
//点击文件名称打开文件
function showfile(file) {
	var fileId = $(file).parent().parent().children('td').eq(0).text();
	var secName = $(file).parent().parent().children('td').eq(4).text();
	var fileName = file.innerText;
	var filestr = fileName.substr(0, fileName.lastIndexOf(".") + 1);
	var fileType = fileName.replace(filestr, "");
	var cont = updateCount(fileId);
	if (cont) {
		openFile(fileType, fileId);
	}
}
//更新文件点击次数
function updateCount(fId) {
	var isSuccess;
	$.ajax({
		type : 'POST',
		url : "/updateCounts",
		async : false,
		data : {
			userId : sessionUser.userId,
			fileId : fId
		},
		success : function(data) {
			if (data != null && data > 0) {
				isSuccess = data;
			} else {
				isSuccess = 0;
			}
		}
	})
	return isSuccess;
}
var pageofficeHeight= window.screen.height
var pageofficeWidth= window.screen.width
//根据文件类型判断打开方法 
function openFile(fileType, fileId,fileSize) {
	
	
	if (fileType == "pdf") {
		POBrowser.openWindowModeless("/pdf?fileId=" + fileId,"width="+pageofficeWidth+"px;height="+pageofficeHeight+"px;");
	} else if (fileType == "xls" || fileType == "xlsx") {
		window.open("/office?url=html/list.html&fileId="+fileId,'newwindow', 'height='+(pageofficeHeight-150)+', width='+(pageofficeWidth-150)+', toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
	} else if (fileType == "doc" || fileType == "docx" ||fileType == "ppt" || fileType == "pptx") {
		POBrowser.openWindowModeless("/word?type=0&fileId=" + fileId,
				"width="+pageofficeWidth+"px;height="+pageofficeHeight+"px;");
	}else if(fileType == "csv") {
		window.open('html/OpenCSV.html?fileId=' + fileId+'&type=0','newwindow', 'height=600, width=800,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
	}else if(fileType == "txt"){
		window.open('html/Opentxt.html?fileId='+fileId,'newwindow', 'height=500, width=500,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
	}else if(fileType =="jpg"||fileType =="JPG"||fileType =="PNG"||fileType =="png"){
		 window.open("/openJpg?fileId="+fileId,'newwindow', 'height=500, width=500,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
	}else if(fileType =="wmv"||fileType =="WMV"){
		 window.open("html/OpenVideo.html?fileId="+fileId,'newwindow', 'height=500, width=500,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
	}else if(fileType =="MP4"||fileType =="mp4"){
		 window.open("html/OpenMp4.html?fileId="+fileId,'newwindow', 'height=500, width=500,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
	}else{
		$("#notOpenModel").modal("show");
	}
}
//根据用户密级和所属部门查询
function getUserData(deptname,id,menuIds){
	$.ajax({
		type : "post",
		url : "/listUserBySecretlevel",
		data : {
			deptname : deptname,
			id : id,
			menuIds:menuIds
		},
		async : false,
		dataType : "json",
		success : function(data) {
			if(data!=null){
				//$("#userNull").css("display","none")
				//data = JSON.parse(JSON.stringify(data).replace(/username/g,"name"));
				//$.fn.zTree.init($("#userTree"), settingUser, data);
				console.log(data)
				$('#tb_deptUser').bootstrapTable('load', data);
			}else{
				$('#tb_deptUser').bootstrapTable('load', "");
			}
		}
	})
}
//数组去重
function unique(arr){
	var hash=[];
	  for (var i = 0; i < arr.length; i++) {
	    for (var j = i+1; j < arr.length; j++) {
	      if(arr[i].id ==arr[j].id){
	        ++i;
	      }
	    }
	      hash.push(arr[i]);
	  }
	  return hash;
}
//获取部门数据
function deptData() {
	$.ajax({
		type : 'POST',
		url : "/getDeptAll",
		datatype : "json",
		success : function(data) {
			console.log(data)
			$.fn.zTree.init($("#deptTree"), settingUser, getDeptData(data));
		}
	})
}
//判断某个部门有子级，整理部门数据
function getDeptData(array) {
	for (var i = 0; i < array.length; i++) {
		array[i].name = array[i].deptName
		if (array[i].children != undefined && array[i].children.length > 0) {
			getDeptData(array[i].children)
		} else {
			delete array[i].children
		}
	}
	return array;
}
//添加分享用户
function allleft(){
	var getSelectRows = $("#tb_user").bootstrapTable('getSelections',
			function(row) {
				return row;
			});
	var rows = $('#tb_user').bootstrapTable('getData');
	for (var i = 0; i < rows.length; i++) {
		for (j = 0; j < getSelectRows.length; j++) {
			if (rows[i].id == getSelectRows[j].id) {
				rows.splice(i, 1);
			}
		}
	}
	$("#tb_user").bootstrapTable('load', rows);
}
//移除分享用户
function allright(){
	var getSelectRows = $("#tb_deptUser").bootstrapTable('getSelections',
			function(row) {
				return row;
			});
	if(getSelectRows.length>0){
		for (var i = 0; i < getSelectRows.length; i++) {
			delete getSelectRows[i].ck
			tabledata.push(getSelectRows[i])
		}
	//	distinct(tabledata)
		$("#tb_user").bootstrapTable('load', unique(tabledata));
	}else{
		console.log('请选择')
	}
}
</script>
<body style="padding: 0px;margin: 0px;height:100%">
<div id="box" style="height:100%">
	<table id="tb_order">
		
	</table>
	<div id="toolbar" class="btn-group"
					style="margin-top: 3px;width: 100%;">
					<input type="text" id="val" style="display:none" />
					<button id="btn_delete" type="button"
						class="btn btn-white btn-default" onclick="delbtn()">
						<span th:text="#{delete}"></span>
					</button>
					<button id="btn_down" type="button" 
						class="btn btn-white btn-default" onclick="dowbtn()">
						<span th:text="#{download}"></span>
					</button>
					<!-- <button id="btn_move" type="button" 
						class="btn btn-white btn-default" onclick="moveBtn()">
						<span th:text="#{move}"></span>
					</button> -->
					<button type="button" class="btn btn-white btn-default"
						onclick="sharebtn()">
						<span th:text="#{share}"></span>
					</button>
					<select id='searchSelect' class='form-control'
						onchange="firstSel(this)"
						style='width:auto;float:left;    margin-right: 10px;'><option
							value='fileName' th:text="#{fileName}">文件名称</option>
						<option value='securityId' th:text="#{filesec}">文档密级</option>
						<!-- <option value='format' th:text="#{format}">格式</option> -->
						<option value='fileDate' th:text="#{date}">日期</option>
						<!-- <option value='alias' th:text="#{alias}">标签</option> -->
					</select> <select id='children' class='form-control'
						style='width:auto;float:left;display:none'></select>
					<div id="menu" class="dropdown"
						style="float:left;display:none;height:34px !important;">
						<input type="text" id="alias2Id" style="display:none" /> <a
							id="alias2Text" data-toggle="dropdown" class="btn"
							data-target="#"
							style="width:109px !important;height:34px !important;color:#333 !important;font-weight: normal !important;margin: 0px !important;font-size: 14px !important;border: 1px solid #ccc;background: none !important;">请选择标签<span
							class="caret" style="margin-left: 5px;color:#000"></span>
						</a>
						<ul id="categories" class="dropdown-menu"></ul>
					</div>
					<div class="input-group" style="margin-left:5px;">
						<input type='text' class='form-control' autocomplete="off"
							placeholder="请选择日期" style="background: none;width: 217px;"
							style="display:none;" id='qBeginTime' /> <input type="text"
							class="form-control" autocomplete="off"
							th:placeholder='#{searchText}'
							style="background: none;width: 217px;color:#333 !important;"
							id="searchInput"> <span class="input-group-btn">
							<button class=" btn-default"
								style="position: absolute;padding: 4px 8px;
		top: 0px;
        left: 7px;
    border: none !important; 
    background: none !important;
    color: #333;border: 1px solid #ccc !important;
    border-radius: 5px !important;"
								type="button" onclick="searchFolder()">
								<i class="icon-search"></i>
							</button>
						</span>
					</div>
					<!-- /input-group -->
				</div>
				<!-- 分享弹出窗口begin -->
		<div class="modal fade" id="shareModal" tabindex="-1" role="dialog"
			aria-labelledby="addRoleLabel" aria-hidden="true">
			<div class="modal-dialog" style="width: 800px;">
				<div class="modal-content">
					<div class="modal-header" style="padding:8px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title" id="addRoleLabel">选择用户</h4>
					</div>
					<div class="modal-body" style="height:500px;">
						<div style="width:100%;height:100%;">
							<input type="text" id="roleUser" style="display:none" />
							<div
								style="width:20%;height:100%;float: left;border-right: 1px solid rgb(204, 204, 204);overflow: auto;">
								<ul class="ztree" id="deptTree"></ul>
							</div>
							<div
								style="width:35%;height:100%;float: left;border-right: 1px solid rgb(204, 204, 204);overflow: auto;" id="div_deptUser">
								<table id="tb_deptUser" style="height:100%;width:100%"></table>
							</div>
							<div
								style="float: left;width:5%;height:100%;float: left;border-right: 1px solid rgb(204, 204, 204);overflow: auto; ">
								<div style="position: relative;top:30%">
									<img onclick="allleft()" src="../assets/images/allleft.png" />
									<!-- <img onclick="" src="../assets/images/left.png"/>
								<img onclick="" src="../assets/images/right.png"/> -->
									<img onclick="allright()" src="../assets/images/allright.png" />
								</div>
							</div>
							<div style="float: left;height:100%;width:35%;overflow: auto;" id="div_user">
								<table id="tb_user" style="height:100%;width:100%"></table>
							</div>
						</div>
					</div>
					<div class="modal-footer" style="padding:5px;">
						<button type="button" class="btn new-tijiao queding"
							onclick="shareMessage()">分享</button>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!-- 分享弹出窗口end -->
	</div>
</body>
<script>
//确认弹框
$.showConfirmTable = function(str, funcok, funcclose, confirm) {
	BootstrapDialog.confirm({
		title : funcclose,
		message : str,
		type : BootstrapDialog.TYPE_WARNING,
		closable : true, // 点击对话框以外的页面内容可关闭
		//draggable : true, // 可拖拽
		btnOKLabel : confirm,
		btnOKClass : 'btn-warning',
		size : BootstrapDialog.SIZE_SMALL,
		// 对话框关闭的时候执行方法
		onhide : funcclose,
		callback : function(result) {
			if (result) {
				console.log(funcok)
				$.post("/deleteMessage", {
					messageIds : funcok
				}, function(data) {
					if (data != null) {
						deleteSuccess()
						$('#tb_order').bootstrapTable('refresh');
					}
				});
			}
		}
	});
};

//搜索按钮
function searchFolder() {
	searchData();
	$('#tb_order').bootstrapTable('refresh', {
		url : '/pageSharer'
	});
	//$("#tb_order").bootstrapTable('load', searchData());
}
var htmlIcon = "<i style='color: red;position: relative;top: 2px;font-size: 27px;left: -6px;' class='icon-remove new-icon'></i>"
//删除按钮
function delbtn() {
	console.log(123)
	var massageIdAll = [];
	var getSelectRows = $("#tb_order").bootstrapTable('getSelections',
			function(row) {
				return row;
			});
	if (getSelectRows.length == 0) {
		nullErr();
	} else {
		for (i = 0; i < getSelectRows.length; i++) {
			massageIdAll.push(getSelectRows[i].messageId)
		}
		console.log(massageIdAll)
		if (lang != "en_US") {
			$.showConfirmTable(htmlIcon + "确认要删除吗？", massageIdAll, "删除文件",
					"确认");
		} else {
			$.showConfirmTable(htmlIcon
					+ "Are you sure you want to delete it?", massageIdAll,
					"DeleteFile", "confirm");
		}
	}
}
//下载按钮
function dowbtn() {
	var fileIdAll = [];
	var getSelectRows = $("#tb_order").bootstrapTable('getSelections',
			function(row) {
				return row;
			});
	if (getSelectRows.length == 0) {
		nullErr();
	} else {
		for (i = 0; i < getSelectRows.length; i++) {
			fileIdAll.push(getSelectRows[i].files.fileId)
		}
		if (getSelectRows.length == 1) {
			window.location.href = "/download?fileId="
					+ getSelectRows[0].files.fileId;
		} else {
			window.location.href = "/downloadFiles?fileIds="+fileIdAll;
		}  
	}
}
//分享按钮
function sharebtn() {
	var getSelectRows = $("#tb_order").bootstrapTable('getSelections',
			function(row) {
				return row;
			});
	if (getSelectRows.length == 0) {
		nullErr();
	} else {
		$('#shareModal').modal('show');
	}
}
//分享文件
function shareMessage() {
	var userRows = $('#tb_user').bootstrapTable('getData');
	var dataRows = $("#tb_order").bootstrapTable('getSelections',
			function(row) {
				return row;
			});
	var dataAll = [];
	for (i = 0; i < userRows.length; i++) {
		var fileIdAll = [];
		for (j = 0; j < dataRows.length; j++) {
			fileIdAll.push(dataRows[j].files.fileId)
		}
		dataAll.push({
			"userId" : userRows[i].userId,
			"dataFile" : fileIdAll
		})

	}
	$.ajax({
		type : 'POST',
		url : "/insertMessage",
		data : {
			dataAll : JSON.stringify(dataAll)
		},
		success : function(data) {
			console.log(data)
			if (data == "ok") {
				$('#shareModal').modal('hide');
				shareSuccess()
				$("#tb_order").bootstrapTable('refresh');
			} else {
				shareErr()
			}
		}
	})
}
</script>
<script>
	laydate.skin('molv');
	laydate({
		elem : "#qBeginTime",
		format : 'YYYY-MM-DD',
		min : "1420-2-10", 
		max : laydate.now()//设定最大日期为当前日期
	});
</script>
</html>
