<!DOCTYPE html>
<html style="height: 98%" xmlns="http://www.w3.org/1999/xhtml"
	xmlns:th="http://www.thymeleaf.org"
	xmlns:sec="http://www.thymeleaf.org/thymeleaf-extras-springsecurity3">
<head>
<link rel="stylesheet" href="../assets/css/font-awesome.min.css" />
<!--[if IE 7]>
    <link rel="stylesheet" href="../assets/css/font-awesome-ie7.min.css">
<![endif]-->
<link rel="stylesheet"
	href="../assets/css/bootstrap/bootstrap-table.css">
<link rel="stylesheet"
	href="../assets/css/bootstrap/jquery.treegrid.css">
<title></title>

<script type="text/javascript" src="jquery.min.js"></script>
<script type="text/javascript" src="pageoffice.js" id="po_js_main"></script>

<!--bootstrap-table-->
<script type="text/javascript"
	src="../assets/js/bootstrap/jquery.min.js"></script>
<script type="text/javascript"
	src="../assets/js/bootstrap/bootstrap-table.min.js"></script>
<script src="../assets/js/bootstrap/bootstrap-table-pagejump.js"></script>
<link href="../assets/css/bootstrap/bootstrap-table-pagejump.css"
	rel="stylesheet">
<!-- <script type="text/javascript" src="../assets/js/bootstrap/bootstrap-table-zh-CN.js"></script> -->
<script type="text/javascript"
	src="../assets/js/bootstrap/bootstrap-table-treegrid.js"></script>
<script type="text/javascript"
	src="../assets/js/bootstrap/jquery.treegrid.min.js"></script>


<link rel="stylesheet" href="../assets/css/bootstrap/bootstrap.min.css">
<script type="text/javascript"
	src="../assets/js/bootstrap/bootstrap.min.js"></script>

<script type="text/javascript" src="../assets/js/BootstrapMenu.min.js"></script>

<link rel="stylesheet"
	href="../assets/css/bootstrap/bootstrap-dialog.css">
<script type="text/javascript"
	src="../assets/js/bootstrap/bootstrap-dialog.js"></script>

<link rel="stylesheet" href="../assets/css/zTreeStyle.css"
	type="text/css">
<script type="text/javascript" src="../assets/js/jquery.ztree.core.js"></script>
<script type="text/javascript"
	src="../assets/js/jquery.ztree.excheck.js"></script>
<script type="text/javascript" src="../assets/js/jquery.ztree.exedit.js"></script>

<script type="text/javascript" src="../assets/js/alldata.js"></script>
<!-- 上传文件 -->
<link rel="stylesheet" href="../assets/css/jquery.plupload.queue.css">
<script type="text/javascript"
	src="../assets/js/upload/plupload.full.min.js"></script>
<script type="text/javascript"
	src="../assets/js/upload/jquery.plupload.queue.js"></script>
<script type="text/javascript" src="../assets/js/upload/zh_CN.js"></script>
<script type="text/javascript" src="../assets/js/upload/moxie.js"></script>

<link rel="stylesheet"
	href="../assets/css/bootstrap/bootstrap-editable.css">
<script type="text/javascript"
	src="../assets/js/bootstrap/bootstrap-editable.js"></script>
<script type="text/javascript"
	src="../assets/js/bootstrap/bootstrap-table-editable.js"></script>
<link rel="stylesheet" href="../assets/css/newstyle.css">
<style>
.plupload_header_content {
	display: none
}

.plupload_filelist_header,.plupload_filelist_footer {
	background: #d2dff3;
}

#box {
	position: relative;
	top: 5px;
}

#pluploader_filelist {
	overflow: hidden;
}

.plupload_buttons {
	position: absolute;
	top: 50%;
	left: 50%;
	margin-left: -52px;
	margin-top: 16px;
}
.ztree li .curSelectedNode span:last-child {
    background-color: #4fc1e9;
    color: #fff;
}
</style>
<style>
i {
	padding-right: 5px;
}

li {
	list-style: none;
	cursor: pointer;
	/*padding-left: 30px;*/
}

body {
	margin: 0 !important;
	overflow: auto;
}

.page-pre {
	top: 30% !important;
}

.page-next {
	top: 30% !important;
}

.columns {
	display: none !important;
}

.modal {
	overflow: auto !important;
	height: auto !important;
}

.per-i {
	color: #CC7003;
}

.sys-i {
	color: #0085FF;
}

p {
	margin: 0px;
	padding: 0px;
}

#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-left>.page-list
	{
	display: none !important;
}

#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination-jump
	{
	display: none !important;
}

#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-item
	{
	display: none !important;
}

#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-pre,.page-next
	{
	display: inline !important;
}

#div_deptUser>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-next
	{
	display: inline !important;
}

#div_user>.bootstrap-table>.fixed-table-pagination>.pull-left>.page-list
	{
	display: none !important;
}

#div_user>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination-jump
	{
	display: none !important;
}

#div_user>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-item
	{
	display: none !important;
}

#div_user>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-pre,.page-next
	{
	display: inline !important;
}

#div_user>.bootstrap-table>.fixed-table-pagination>.pull-right>.pagination>.page-next
	{
	display: inline !important;
}
</style>
<script>
//获取登录者信息
var sessionUser;
$.ajax({
	type : "post",
	url : "/getSessionByIp",
	async : false,
	success : function(data) {
		sessionUser=data
	}
})
function getUrlParam(name) {
	    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");// 构造一个含有目标参数的正则表达式对象
	    var r = parent.parent.parent.location.search.substr(1).match(reg);// 匹配目标参数
	    if (r != null) return unescape(r[2]);
	     return null; // 返回参数值
}
var lang = getUrlParam("lang");
var menuId, tabsId;
var tabledata=[];
var usercolumns,columns,roleBtns;
var status=false;
var cfileid;
$.ajax({
	type : 'POST',
	url : "/getFilesByTabsid",
	async : false,
	dataType : "json",
	success : function(data) {
		menuId = data.menuId;
	}
})
$.ajax({
	type : 'POST',
			url : "/getUserButtonByMenuId",
			data : {
				userId : sessionUser.userId,
				menuId : menuId
			},
			async : false,
			dataType : "json",
			success : function(data) {
				if(data!=null){
					roleBtns=data
					for(var i=0;i<data.length;i++){
						if(data[i].btnName=='系统标签'){
							status=true
						}
						
					}
				}
			}
		})
if (lang != "en_US") {
	usercolumns = [ [ {
		field : 'ck',
		checkbox : true,
		width : '1%',
		formatter : function(value, row, index) {
			if (row.check == true) {
				// console.log(row.serverName);
				//设置选中
				return {
					checked : true
				};
			}
		}
	}, {
		field : 'username',
		title : '姓名'
	},{
		field : 'deptname',
		title : '部门'
	}] ]
	if(status=='true'){
		columns = [ [
						{
							field : 'fileId',
							title : '#',
							width : '0.5%',
							cellStyle : function(row, index) {
								var style = {};
								style = {
									css : {
										'display' : 'none'
									}
								};
								return style;
							}
						},
						{
							field : 'check',
							checkbox : true,
							width : '0.5%',
							formatter : function(value, row, index) {
								if (row.check == true) {
									// console.log(row.serverName);
									//设置选中
									return {
										checked : true
									};
								}
							}

						},
						{
							field : 'fileName',
							title : '名称<img src="../assets/css/bootstrap/images/both.png" id="fileNameSort" style="widht:16px;height:16px;display:inline;margin-right: -44%;margin-left: 44%;cursor: pointer;" onclick="nameSort()" />',
							 width : '35%', 
							formatter : forma
							//sortable : true
						},
						{
							field : 'security.securityName',
							title : '密级<select id="tableSec" class="form-control" style="width:65px;display:inline;margin-left:5px;" onchange="changSec(this)"></select>',
						 width : '10%' 
						},
						{
							field : 'fileDate',
							title : '日期',
							sortable : true,
						 width : '10%' 
						},
						{
							field : 'fileVersion',
							title : '版本',
						 width : '5%' 
						},
						{
							field : 'user.username',
							title : '发布人',
						 width : '8%' 
						},
						{
							field : 'alias',
							title : '系统标签',
							align : 'center',
							width : '15%' ,
							formatter : function(value, row, index) {
								var content = "";
								for (var i = 0; i < value.length; i++) {
									if (value[i].aliasType == 1) {
										content += "<p><i class='icon-tag sys-i'></i><span class='sys-i'>"
												+ value[i].aliasName
												+ "</span></p>";
									}
								}
								//if (status) {
									content += "<p><i class='icon-plus' style='cursor: pointer;' onclick='plusAlias(this,1)'></i></p>";
								//} else {
								//	content += "<p><i class='icon-plus' style='cursor: pointer;color:#757575'></i></p>";
								//}
								return content;
							}
						},
						{
							field : 'alias',
							title : '个人标签',
							align : 'center',
							width : '15%' ,
							formatter : function(value, row, index) {
								var content = "";
								for (var i = 0; i < value.length; i++) {
									if (value[i].aliasType == 2) {
										content += "<p><i class='icon-tag per-i'></i><span class='per-i'>"
												+ value[i].aliasName
												+ "</span></p>";
									}
								}
								content += "<p><i class='icon-plus' style='cursor: pointer;' onclick='plusAlias(this,2)'></i></p>";
								return content;
							}

						}, {
							field : 'remark',
							title : '备注',
							width : '10%' ,
							editable : {
								type : 'text',
								//disabled: true, 
								emptytext : "无"
							}
						}, {
							field : 'fileSize',
							title : '文件大小',
							width : '5%' ,
							formatter:formaSize
						} ] ]
	}else{
		columns = [ [
						{
							field : 'fileId',
							title : '#',
							width : '0.5%',
							cellStyle : function(row, index) {
								var style = {};
								style = {
									css : {
										'display' : 'none'
									}
								};
								return style;
							}
						},
						{
							field : 'check',
							checkbox : true,
							width : '0.5%',
							formatter : function(value, row, index) {
								if (row.check == true) {
									// console.log(row.serverName);
									//设置选中
									return {
										checked : true
									};
								}
							}

						},
						{
							field : 'fileName',
							title : '名称<img src="../assets/css/bootstrap/images/both.png" id="fileNameSort" style="widht:16px;height:16px;display:inline;margin-right: -44%;margin-left: 44%;cursor: pointer;" onclick="nameSort()" />',
							 width : '35%', 
							formatter : forma
							//sortable : true
						},
						{
							field : 'security.securityName',
							title : '密级<select id="tableSec" class="form-control" style="width:65px;display:inline;margin-left:5px;" onchange="changSec(this)"></select>',
						 width : '10%' 
						},
						{
							field : 'fileDate',
							title : '日期',
							sortable : true,
						 width : '10%' 
						},
						{
							field : 'fileVersion',
							title : '版本',
						 width : '5%' 
						},
						{
							field : 'user.username',
							title : '发布人',
						 width : '8%'
						},
						{
							field : 'alias',
							title : '系统标签',
							width : '15%' ,
							align : 'center',
							formatter : function(value, row, index) {
								var content = "";
								for (var i = 0; i < value.length; i++) {
									if (value[i].aliasType == 1) {
										content += "<p><i class='icon-tag sys-i'></i><span class='sys-i'>"
												+ value[i].aliasName
												+ "</span></p>";
									}
								}
							//	if (status=='true') {
									content += "<p><i class='icon-plus' style='cursor: pointer;' onclick='plusAlias(this,1)'></i></p>";
							//	} else {
							//		content += "<p><i class='icon-plus' style='cursor: pointer;color:#757575'></i></p>";
							//	}
								return content;
							}
						},
						{
							field : 'alias',
							title : '个人标签',
							width : '15%' ,
							align : 'center',
							formatter : function(value, row, index) {
								var content = "";
								for (var i = 0; i < value.length; i++) {
									if (value[i].aliasType == 2) {
										content += "<p><i class='icon-tag per-i'></i><span class='per-i'>"
												+ value[i].aliasName
												+ "</span></p>";
									}
								}
								content += "<p><i class='icon-plus' style='cursor: pointer;' onclick='plusAlias(this,2)'></i></p>";
								return content;
							}

						}, {
							field : 'remark',
							title : '备注',
							width : '15%' ,
						}, {
							field : 'fileSize',
							title : '文件大小',
							width : '5%' ,
							formatter:formaSize
						} ] ]
	}
	
	document.write("<script src='../assets/js/bootstrap/bootstrap-table-zh-CN.js' >"
					+ "<" + "/script>");
}else{
	usercolumns = [ [ {
		field : 'ck',
		checkbox : true,
		width : '1%',
		formatter : function(value, row, index) {
			if (row.check == true) {
				// console.log(row.serverName);
				//设置选中
				return {
					checked : true
				};
			}
		}
	}, {
		field : 'username',
		title : 'userName'
	},{
		field : 'deptname',
		title : 'deptName'
	}] ]
	if(status=='true'){
		columns = [ [
						{
							field : 'fileId',
							title : '#',
							width : '0.5%',
							cellStyle : function(row, index) {
								var style = {};
								style = {
									css : {
										'display' : 'none'
									}
								};
								return style;
							}
						},
						{
							field : 'check',
							checkbox : true,
							width : '0.5%',
							formatter : function(value, row, index) {
								if (row.check == true) {
									return {
										checked : true
									};
								}
							}

						},
						{
							field : 'fileName',
							title : 'FileName<img src="../assets/css/bootstrap/images/both.png" id="fileNameSort" style="widht:16px;height:16px;display:inline;margin-right: -44%;margin-left: 44%;cursor: pointer;" onclick="nameSort()" />',
							width : '35%' ,
							formatter : forma,
							sortable : true
						},
						{
							field : 'security.securityName',
							width : '10%' ,
							title : 'Security<select id="tableSec" class="form-control" style="width:65px;display:inline;margin-left:5px;" onchange="changSec(this)"></select>'
						},
						{
							field : 'fileDate',
							title : 'Date',
							width : '10%' ,
							sortable : true
						},
						{
							field : 'fileVersion',
							width : '5%' ,
							title : 'Version'
						},
						{
							field : 'user.username',
							width : '8%' ,
							title : 'UserName'
						},
						{
							field : 'alias',
							title : 'System Label',
							align : 'center',
							width : '15%' ,
							formatter : function(value, row, index) {
								var content = "";
								for (var i = 0; i < value.length; i++) {
									if (value[i].aliasType == 1) {
										content += "<p><i class='icon-tag sys-i'></i><span class='sys-i'>"
												+ value[i].aliasName
												+ "</span></p>";
									}
								}
								//if (status=='true') {
									content += "<p><i class='icon-plus' style='cursor: pointer;' onclick='plusAlias(this,1)'></i></p>";
								//} else {
								//	content += "<p><i class='icon-plus' style='cursor: pointer;color:#757575'></i></p>";
								//}
								return content;
							}
						},
						{
							field : 'alias',
							title : 'Personal Label',
							align : 'center',
							width : '15%' ,
							formatter : function(value, row, index) {
								var content = "";
								for (var i = 0; i < value.length; i++) {
									if (value[i].aliasType == 2) {
										content += "<p><i class='icon-tag per-i'></i><span class='per-i'>"
												+ value[i].aliasName
												+ "</span></p>";
									}
								}
								content += "<p><i class='icon-plus' style='cursor: pointer;' onclick='plusAlias(this,2)'></i></p>";
								return content;
							}

						}, {
							field : 'remark',
							title : 'Remark',
							width : '15%' ,
							editable : {
								type : 'text',
								emptytext : "无"
							}
						}, {
							field : 'fileSize',
							title : 'fileSize',
							width : '5%' ,
							formatter:formaSize
						} ] ]
	}else{
	columns = [ [
					{
						field : 'fileId',
						title : '#',
						width : '0.5%',
						cellStyle : function(row, index) {
							var style = {};
							style = {
								css : {
									'display' : 'none'
								}
							};
							return style;
						}
					},
					{
						field : 'check',
						checkbox : true,
						width : '0.5%',
						formatter : function(value, row, index) {
							if (row.check == true) {
								return {
									checked : true
								};
							}
						}

					},
					{
						field : 'fileName',
						title : 'FileName<img src="../assets/css/bootstrap/images/both.png" id="fileNameSort" style="widht:16px;height:16px;display:inline;margin-right: -44%;margin-left: 44%;cursor: pointer;" onclick="nameSort()" />',
						width : '35%' ,
						formatter : forma,
						sortable : true
					},
					{
						field : 'security.securityName',
						width : '10%' ,
						title : 'Security<select id="tableSec" class="form-control" style="width:65px;display:inline;margin-left:5px;" onchange="changSec(this)"></select>'
					},
					{
						field : 'fileDate',
						title : 'Date',
						width : '10%' ,
						sortable : true
					},
					{
						field : 'fileVersion',
						width : '5%' ,
						title : 'Version'
					},
					{
						field : 'user.username',
						width : '8%' ,
						title : 'UserName'
					},
					{
						field : 'alias',
						title : 'System Label',
						align : 'center',
						width : '15%' ,
						formatter : function(value, row, index) {
							var content = "";
							for (var i = 0; i < value.length; i++) {
								if (value[i].aliasType == 1) {
									content += "<p><i class='icon-tag sys-i'></i><span class='sys-i'>"
											+ value[i].aliasName
											+ "</span></p>";
								}
							}
							// if(status=='true'){
							  	content+="<p><i class='icon-plus' style='display: block;cursor: pointer;' onclick='plusAlias(this,1)'></i></p>";
							// }else{
							//content += "<p><i class='icon-plus' style='display: block;cursor: pointer;color:#757575'></i></p>";
							// }
							return content;
						}
					},
					{
						field : 'alias',
						title : 'Personal Label',
						align : 'center',
						width : '15%' ,
						formatter : function(value, row, index) {
							var content = "";
							for (var i = 0; i < value.length; i++) {
								if (value[i].aliasType == 2) {
									content += "<p><i class='icon-tag per-i'></i><span class='per-i'>"
											+ value[i].aliasName
											+ "</span></p>";
								}
							}
							content += "<p><i class='icon-plus' style='display: block;cursor: pointer;' onclick='plusAlias(this,2)'></i></p>";
							return content;
						}

					}, {
						field : 'remark',
						title : 'Remark',
						width : '15%' 
					}, {
						field : 'fileSize',
						title : 'fileSize',
						width : '5%' ,
						formatter:formaSize
					} ] ]
	}
}

var setting = { //此处根据自己需要进行配置
		view : {
			selectedMulti : false, //设置是否能够同时选中多个节点
			showIcon : false, //设置是否显示节点图标
			showLine : true, //设置是否显示节点与节点之间的连线
			showTitle : false, //设置是否显示节点的title提示信息
		},
		data : {
			simpleData : {
				enable : true
			},
			key : {
				url : "xUrl",
				icon : "menuIcon"
			}
		},
		check : {
			enable : true,
			//设置是否显示checkbox复选框
			chkStyle : "radio", //单选框
			radioType : "all" //对所有节点设置单选
		},
		callback : {
			onClick: onClick,
            onCheck: onCheckAlias,
            beforeCheck : beforeCheck
		}
	};
	var sortState=false;
	//文件名称排序
	function nameSort(){
		var sortName="desc";
		if(sortState){
			sortName="desc";
			sortState=false;
		}else{
			sortName="asc";
			sortState=true;
		}
		 $.ajax({
			type : 'POST',
			url : "/listFilesByTabsidSort",
			async : false,
			data:{
				fileName:$("#searchInput").val(),
				sortName:sortName
			},
			dataType : "json",
			success : function(data) {
				//tabledata = data.files;
				 $("#tb_order").bootstrapTable('destroy');
				//$("#tb_order").bootstrapTable('load', tableAll());
				tableData( data.files);
				getSecurity();
				//$("#tb_order").bootstrapTable('load', data.files);
				if(sortState){
					document.getElementById('fileNameSort').src = "../assets/css/bootstrap/images/asc.png"
				}else{
					document.getElementById('fileNameSort').src = "../assets/css/bootstrap/images/desc.png"
				}
			}
		}) 
	}
	//获取用户的标签
	function aliasByUser(type) {
		$
				.ajax({
					type : 'POST',
					url : "/aliasByUser",
					data : {
						userId : sessionUser.userId
					},
					success : function(data) {
						if (data != null) {
							data = JSON.parse(JSON.stringify(data).replace(/aliasName/g,
							"name"));
							 data=getChildren(data);
								document.getElementById('myalias').innerHTML = ""
							//for (var i = 0; i < data.length; i++) {
								if (type == 1) {
										document.getElementById('myalias').innerHTML += '<span onclick="attention(this,1)" title="系统标签" style="border-radius: 5px;padding:3px;margin-right:5px;background-color:#C2E1EF;cursor:pointer">'
											+ data[0].name + '</span>';
										$.fn.zTree.init($("#systree"), setting,data[0].children);
								} else {
									document.getElementById('myalias').innerHTML += '<span onclick="attention(this,2)" title="个人标签" style="background-color:#EFEDC2;border-radius: 5px;padding:3px;margin-right:5px;cursor:pointer">'
											+ data[1].name + '</span>';
										$.fn.zTree.init($("#pertree"), setting,data[1].children);
								}
							//}
							if (data.length != 0) {
							} else {
								document.getElementById('aliasUser').style.display = "none"
							}
						}
					}
				})
	}
	//父节点不可选择
	function beforeCheck(treeId, treeNode) {
            if (treeNode.isParent) {
            	selectedNodeErr()
                return false;
            }
	}
	// 树的单击事件
	function onClick(event, treeId, treeNode) {
		var str=treeNode.tId
		var treeName=str.substring(0,str.indexOf("_")) 
		var aliasTable=document.getElementById('tb_alias')
		aliasTable.rows[0].style.display="none"
		aliasTable.rows[1].style.display=""
		if(treeName=="pertree"){
			var zTreeObj = $.fn.zTree.getZTreeObj("pertree");
			// $("#labelVal").val(zTreeObj.getSelectedNodes()[0].name);
			document.getElementById("selectAliasName").innerText=zTreeObj.getSelectedNodes()[0].name;
			$("#aliasId").val(zTreeObj.getSelectedNodes()[0].aliasId);
			$("#aliaslistgeren").modal("hide");
		}else if(treeName=="systree"){
			var zTreeObj = $.fn.zTree.getZTreeObj("systree");
			/* if(status=='false'){
				 document.getElementById("selectAliasName").innerText=zTreeObj.getSelectedNodes()[0].name;
			}else{
				$("#labelVal").val(zTreeObj.getSelectedNodes()[0].name);
			} */
			$("#aliasId").val(zTreeObj.getSelectedNodes()[0].aliasId);
			document.getElementById("selectAliasName").innerText=zTreeObj.getSelectedNodes()[0].name;
			$("#aliaslistxitong").modal("hide");
		}
	}
	//节点勾选事件
	function onCheckAlias(e, treeId, treeNode) {
		var str=treeNode.tId
		var treeName=str.substring(0,str.indexOf("_")) 
		var aliasTable=document.getElementById('tb_alias')
		aliasTable.rows[0].style.display="none"
		aliasTable.rows[1].style.display=""
		if(treeName=="pertree"){
			var zTreeObj = $.fn.zTree.getZTreeObj("pertree");
			/* console.log(zTreeObj.getCheckedNodes()[0])
			$("#labelVal").val(zTreeObj.getCheckedNodes()[0].name); */
			document.getElementById("selectAliasName").innerText=zTreeObj.getCheckedNodes()[0].name;
			$("#aliasId").val(zTreeObj.getCheckedNodes()[0].aliasId);
			$("#aliaslistgeren").modal("hide");
		}else if(treeName=="systree"){
			var zTreeObj = $.fn.zTree.getZTreeObj("systree");
			/* if(status=='false'){
				document.getElementById("selectAliasName").innerText=zTreeObj.getCheckedNodes()[0].name;
			}else{
				$("#labelVal").val(zTreeObj.getCheckedNodes()[0].name);
			}
			$("#labelVal").val(zTreeObj.getCheckedNodes()[0].name); */
			document.getElementById("selectAliasName").innerText=zTreeObj.getCheckedNodes()[0].name;
			$("#aliasId").val(zTreeObj.getCheckedNodes()[0].aliasId);
			$("#aliaslistxitong").modal("hide");
		}
	}
	function getChildren(array) {
		for (var i = 0; i < array.length; i++) {
			if (array[i].children != "undefined"
					|| array[i].children != undefined) {
				if (array[i].children != "null" && array[i].children != null
						&& array[i].children.length != 0) {
					getChildren(array[i].children)
				} else {
					delete array[i].children
				}
			}
		}
		return array;
	}
	//根据type判断点击是系统标签还是个人标签
	function attention(info,type) {
		if(type ==1){
			$("#aliaslistxitong").modal("show");
		}else{
			$("#aliaslistgeren").modal("show");
		}
	}
	//根据数据加载表格
	function tableData(dataTable) {
		$('#tb_order').bootstrapTable({
							data : dataTable,
							idField : 'fileId',
							//method : 'post', //请求方式（*）
							//contentType : 'application/x-www-form-urlencoded',//post请求的话就加上这个句话
							toolbar : '#toolbar', //工具按钮用哪个容器
							//cache : false, // 是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
							pagination : true, //是否显示分页（*）
							paginationShowPageGo: true,
							pageNumber : 1, //初始化加载第一页，默认第一页
							pageSize : 15, //每页的记录行数（*）
							pageList : [ 10, 15, 20 ,30,50], //可供选择的每页的行数（*）
							clickToSelect : false, //是否启用点击选中行
							//sortable : true, //是否启用排序
							//sortOrder : "asc", //排序方式
							showRefresh : false, //显示刷新按钮 
							sidePagination : "client", //分页方式：client客户端分页，server服务端分页（*）
							queryParamsType : '',
							queryParams : function(params) {//自定义参数，这里的参数是传给后台的，我这是是分页用的
								return {//这里的params是table提供的
									fileName : $("#searchInput").val(),
									pageNumber : params.pageNumber,
									pageSize : params.pageSize
								};
							},
							treeShowField : 'fileVersion',
							parentIdField : 'pId',
							//search : true,
							columns : columns,
							onEditableSave : function(field, row, oldValue, $el) {//编辑单元格事件
								$.ajax({
									type : 'POST',
									url : "/updateRemark",
									data : {
										fileId : row.fileId,
										remark : row.remark
									},
									async : false,
									success : function(data) {
										if (data != null || data != "") {
											updateSuccess()
											$("#tb_order").bootstrapTable(
													'load', tableAll());
										}
									}
								})
							},
							onResetView : function(data) {
								//console.log('load');
								$("#tb_order")
										.treegrid(
												{
													initialState : 'collapsed',// 所有节点都折叠
													//initialState: 'expanded',// 所有节点都展开，默认展开
													treeColumn : 5,
													expanderExpandedClass : 'icon-caret-down', //图标样式
													expanderCollapsedClass : 'icon-caret-right',
													onChange : function() {
														$("#tb_order")
																.bootstrapTable(
																		'resetWidth');
													}
												});
								//只展开树形的第一级节点
								//$("#tb_order").treegrid('getRootNodes').treegrid('expand');

							},
							onCheck : function(row) {
								var datas = $('#tb_order').bootstrapTable(
										'getData');
								// 勾选子类
								selectChilds(datas, row, "id", "pId", true);

								// 勾选父类
								selectParentChecked(datas, row, "id", "pId")

								// 刷新数据
								$('#tb_order').bootstrapTable('load', datas);
							},
							onUncheck : function(row) {
								var datas = $('#tb_order').bootstrapTable(
										'getData');
								selectChilds(datas, row, "id", "pId", false);
								$('#tb_order').bootstrapTable('load', datas);
							},
							onClickRow:function(row,$element){
							}
						});
		$('#tb_order').children().children().children('th').eq(0).css(
				"display", "none");
		 $('#tb_order > thead > tr > th:eq(4)').on('click',function(){
			 document.getElementById('fileNameSort').src = "../assets/css/bootstrap/images/both.png"
		 });
	}
	/**
	 * 选中父项时，同时选中子项
	 * @param datas 所有的数据
	 * @param row 当前数据
	 * @param id id 字段名
	 * @param pid 父id字段名
	 */
	function selectChilds(datas, row, id, pid, checked) {
		for ( var i in datas) {
			console.log(datas[i])
			console.log(datas[i][pid])
			console.log(row[id])
			if (datas[i][pid] == row[id]) {
				datas[i].check = checked;
				selectChilds(datas, datas[i], id, pid, checked);
			}
		}
	}

	function selectParentChecked(datas, row, id, pid) {
		for ( var i in datas) {
			console.log(datas[i])
			if (datas[i][id] == row[pid]) {
				datas[i].check = true;
				selectParentChecked(datas, datas[i], id, pid);
			}
		}
	}
	function changSec(info) {
		if (info.value != 0) {
			$.ajax({
				type : 'POST',
				url : "/listBySecurityId",
				data : {
					securityId : info.value
				},
				async : false,
				success : function(data) {
					//tableData(data);
					for(var i=0;i<data.length;i++){
						for(var j=0;j<data.length;j++){
							if(data[j].pId!=data[i].fileId){
								data[j].pId=null
							}
						}
					}
					$("#tb_order").bootstrapTable('load', data);
				}
			})
		} else {
			$("#tb_order").bootstrapTable('load', tableAll());
		}
	}
	//获取菜单Id查询选项卡数据
	function tabData(menuId) {
		var tabData;
		$.ajax({
			type : 'POST',
			url : "/getTabsData",
			data : {
				id : menuId
			},
			async : false,
			success : function(data) {
				console.log(data)
				tabData = getChildren(data);
			}
		})
		return tabData;
	}
	//查询表格数据
	function tableAll() {
		var tabledata;
		$.ajax({
			type : 'POST',
			url : "/getFilesByTabsid",
			async : false,
			data:{
				fileName:$("#searchInput").val()
			},
			dataType : "json",
			success : function(data) {
				tabsId = data.tabsId;
				menuId = data.menuId;
				tabledata = data.files;
			}
		})
		return tabledata;
	}
	
	var settingUser = { //此处根据自己需要进行配置
			view : {
				selectedMulti : false, //设置是否能够同时选中多个节点
				showIcon : true, //设置是否显示节点图标
				ShowPlusMinus : false,
				showLine : true, //设置是否显示节点与节点之间的连线
				showTitle : false, //设置是否显示节点的title提示信息
			},
			data : {
				simpleData : {
					enable : true
				}
			},
			callback : {
				onClick : zTreeOnClickRight,
				beforeClick : zTreeBeforeClick,
				onCheck : onCheck
			}
		};
	function zTreeBeforeClick(treeId, treeNode, clickFlag) {
		var str = treeNode.tId
		var treeName = str.substring(0, str.indexOf("_"))
		if (treeName == "deptTree") {
			return true;
		} else {
			return false;
		}
	}
	function onCheck(e, treeId, treeNode) {
		var getSelectRows = $("#tb_order").bootstrapTable(
				'getSelections', function(row) {
					return row;
				});
		var ids=[];
		for(var i=0;i<getSelectRows.length;i++){
			ids.push(getSelectRows[i].security.securityId)
		}
		if(treeId=="deptTree"){
			getUserData(treeNode.name,ids);
		}
	}
	// 树的单击事件
	function zTreeOnClickRight(event, treeId, treeNode, clickFlag) {
		var getSelectRows = $("#tb_order").bootstrapTable(
				'getSelections', function(row) {
					return row;
				});
		var ids=[];
		var menuIds=[];
		for(var i=0;i<getSelectRows.length;i++){
			ids.push(getSelectRows[i].security.securityId)
			menuIds.push(getSelectRows[i].menu.id)
		}
		var max = ids[0];
		var len = ids.length; 
		for (var i = 1; i < len; i++){ 
		if (ids[i] > max) { 
		max = ids[i]; 
		} 
		} 
		getUserData(treeNode.name,max,unique(menuIds));
	}
	function getUserData(deptname,id,menuIds){
		$.ajax({
			type : "post",
			url : "/listUserBySecretlevel",
			data : {
				deptname : deptname,
				id : id,
				menuIds:menuIds
			},
			async : false,
			dataType : "json",
			success : function(data) {
				if(data!=null){
					//$("#userNull").css("display","none")
					//data = JSON.parse(JSON.stringify(data).replace(/username/g,"name"));
					//$.fn.zTree.init($("#userTree"), settingUser, data);
					$('#tb_deptUser').bootstrapTable('load', data);
				}else{
					$('#tb_deptUser').bootstrapTable('load', "");
				}
			}
		})
	}
	function unique(arr){
	   /*  arr.sort();
	    var newArr = [arr[0]];
	     for(var i = 1; i < arr.length; i++){
	          if(arr[i].id != newArr[newArr.length - 1].id){
	               newArr.push(arr[i]);
	          }
	     }
	     return newArr; */
		var hash=[];
		  for (var i = 0; i < arr.length; i++) {
		    for (var j = i+1; j < arr.length; j++) {
		      if(arr[i].id ==arr[j].id){
		        ++i;
		      }
		    }
		      hash.push(arr[i]);
		  }
		  return hash;
	}
	$(function() {
		$("#wanquanjiazai").click(function(){
			windowsindex++;
			window.open('html/OpenCSV.html?fileId=' + cfileid+'&type=0','newwindow'+windowsindex, 'height=600, width=800,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
			
		})
		
		$("#yulandakai").click(function(){
			windowsindex++;
		//	window.location.href = 'html/OpenCSV.html?fileId=' + fileId+'&type=1'
			window.open('html/OpenCSV.html?fileId=' + cfileid+'&type=1','newwindow'+windowsindex, 'height=600, width=800,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
		})
		 $('body').click(function(){
			//var menu= window.parent.document.getElementsByClassName("menu")
			//console.log(menu)
			window.parent.$('.dropdown-toggle').dropdown();
		   })
		tableData(tableAll());
		 $("#tb_user").bootstrapTable({
				data : tabledata,
				cache : false, // 是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
				pagination : true, //是否显示分页（*）
				paginationShowPageGo : true,
				pageNumber : 1, //初始化加载第一页，默认第一页
				pageSize : 10, //每页的记录行数（*）
				pageList : [ 10, 15, 20, 30, 50 ], //可供选择的每页的行数（*）
				clickToSelect : true, //是否启用点击选中行
				sortable : false, //是否启用排序
				//sortOrder : "asc", //排序方式
				sidePagination : "client", //分页方式：client客户端分页，server服务端分页（*）
				queryParamsType : '',
				queryParams : function(params) {//自定义参数，这里的参数是传给后台的，我这是是分页用的
					return {//这里的params是table提供的
						username : $("#nameInput").val(),
						pageNumber : params.pageNumber,
						pageSize : params.pageSize
					};
				},
				columns : usercolumns
			})
			$("#tb_deptUser").bootstrapTable({
			cache : false, // 是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
			pagination : true, //是否显示分页（*）
			paginationShowPageGo : true,
			pageNumber : 1, //初始化加载第一页，默认第一页
			pageSize : 10, //每页的记录行数（*）
			pageList : [ 10, 15, 20, 30, 50 ], //可供选择的每页的行数（*）
			clickToSelect : true, //是否启用点击选中行
			sortable : false, //是否启用排序
			//sortOrder : "asc", //排序方式
			sidePagination : "client", //分页方式：client客户端分页，server服务端分页（*）
			queryParamsType : '',
			search : true,
			columns : usercolumns
			//onDblClickRow: function (row) {
		    //    $('#tb_user').bootstrapTable('append', row);
			//}
		})
		//$('#tb_user').bootstrapTable('hideColumn','deptname')
		///$('#tb_deptUser').bootstrapTable('hideColumn','deptname')
		getSecurity();
		var tabids = [];
		var chageFlist = [];
		var chageJlist = [];
		var chageMlist = [];
		//获取同专业下的菜单
		$.ajax({
			type : "post",
			url : "/getMenu",
			data : {
				"userId" : sessionUser.userId,
				"menuId" : menuId
			},
			async : false,
			dataType : "json",
			success : function(data) {
				console.log(data.length)
				$.fn.zTree.init($("#tree"), setting, getNode(getMenuChildren(data))); 
			}
		})
		//获取用户的收藏夹
		$.ajax({
			type : 'POST',
			url : "/folderByUser",
			data : {
				userId : sessionUser.userId
			},
			async : false,
			success : function(data) {
				data = JSON.parse(JSON.stringify(data).replace(/folderName/g,
						"name"));
				$.fn.zTree.init($("#folder"), setting, getNode(data));
			}
		})
		if(roleBtns!=null){
			for(var i=0;i<roleBtns.length;i++){
				if(roleBtns[i].btnName=='移动'){
					$("#btn_move").css("display", "");
				}
				if(roleBtns[i].btnName=='删除'){
					$("#btn_delete").css("display", "");
				} 
				if(roleBtns[i].btnName=='下载'){
					$("#btn_down").css("display", "");
				}
				if(roleBtns[i].btnName=='上传'){
					$("#uploadFile").css("display", "");
				}
			}
		}
		DataAll();
		 var flag = true;
	        $('#searchInput').on('compositionstart',function(){
	            flag = false;
	        })
	        $('#searchInput').on('compositionend',function(){
	            flag = true;
	        })
			$('#searchInput').bind('input', function() {
			 var _this = this;
	            setTimeout(function(){
	                if(flag){
	                	$("#tb_order").bootstrapTable('destroy');
	        			tableData(tableAll());
	        			getSecurity();
	        			//window.onload = function(){
	        				var oInput = document.getElementById("searchInput");
	        				oInput.focus();
	        			//}
	                }
	            },0)
		})
		// $("#tb_order").tablesorter(); 	
	})
	//获取密级
	function getSecurity(){
		$("#tableSec").html('')
		$("#securityId").html('')
		$.ajax({
			type : 'POST',
			url : "/getSecurityAll",
			datatype : "json",
			success : function(data) {
				$("#tableSec").append("<option value='0'>全部</option>");
				$("#securityId").append("<option value='0'>请选择密级</option>")
				for (var i = 0; i < data.length; i++) {
					$("#tableSec").append(
							"<option value='"+data[i].securityId+"'>"
									+ data[i].securityName + "</option>");
					$("#securityId").append(
							"<option value='"+data[i].securityId+"'>"
							+ data[i].securityName + "</option>");
				}
			}
		})
	}
//获取不是验证矩阵的基本节点
	function getMenuChildren(array){
		for(var i = 0 ;i<array.length;i++){
			if(array[i].url=="html/yanzhengjuzhen.html"){
				  delete array[i] 
			 }}
		array=trimSpace(array);
		for(var i = 0 ;i<array.length;i++){
			if(array[i].menus!=null&&array[i].menus.length>0){
				  getMenuChildren(array[i].children)
			  }else{
				  console.log(array[i].name)
				  if(array[i].url=="html/tab3.html"){
					  if (tabData(array[i].id).length != 0) {
							var temps = tabData(array[i].id);
							array[i].children = temps;
						}
				  }
			  }
		}
		//array=trimSpace(array);
		return array;
		  /* for(var i = 0 ;i<array.length;i++)  {
			  if(array[i].menus!=null&&array[i].menus.length>0&&array[i].url!=""){
				  getMenuChildren(array[i].children)
			  }else{
				  if (tabData(array[i].id).length != 0) {
						var temps = tabData(array[i].id);
						array[i].children = temps;
					}
			  }
			  if(array[i].url!="html/test.html"){
				delete array[i]
			}
		  }
		  array=trimSpace(array);
		  return array; */
	}
	function trimSpace(array){  
     for(var i = 0 ;i<array.length;i++)  
     {  
         if(array[i] == " " || array[i] == null || typeof(array[i]) == "undefined")  
         {  
                  array.splice(i,1);  
                  i= i-1;  

         }  
     }  
     return array;  
} 
	function getNode(array) {
		array=trimSpace(array)
		for (var i = 0; i < array.length; i++) {
			if (array[i].children != "undefined"
					|| array[i].children != undefined) {
				if (array[i].children != "null" && array[i].children != null
						&& array[i].children.length != 0) {
					getNode(array[i].children)
				} else {
					delete array[i].children
				}
			}
		}
		return array;
	}
	function formasorter(a, b) {
		a = a.split('-');
		b = b.split('-');
		if (a[2] == b[2]) {
			if (a[0] == b[0]) {
				return (a[1] > b[1] ? 1 : -1);
			} else {
				return (a[0] > b[0] ? 1 : -1);
			}
		} else {
			return (a[2] > b[2] ? 1 : -1);
		}
	}
	function forma(value, row, index) {
		if (row.fileName) {
			var namestr=row.fileName;
			//console.log($(".search").children("input").val())
				if($("#searchInput").val()!=""){
				//	if($(".search").children("input").val()!=""){
					var array = namestr.split($("#searchInput").val());
					//var array = namestr.split($("#searchInput").val());
					namestr="";
					for(var j = 0;j<array.length;j++){
						if(j==array.length-1){
							namestr+=array[j]
						}else{
							namestr+=array[j]+"<span style='color:red;'>"+$("#searchInput").val()+"</span>"
						}
					}
				}
			return "<a style='color: #1963AA;text-decoration: none;' href='javascript:void(0)' target='_blank' onclick='showfile(this)'>"
					+ namestr+ "<a/>";
		}
	}
	function formaSize(value, row, index) {
		if(row.fileSize!=""&&row.fileSize!=null){
			if (row.fileSize < 1024) {
		        return row.fileSize + 'B';
		    } else if (row.fileSize < (1024*1024)) {
		        var temp = row.fileSize / 1024;
		        temp = temp.toFixed(0);
		        return temp + 'KB';
		    } else if (row.fileSize < (1024*1024*1024)) {
		        var temp = row.fileSize / (1024*1024);
		        temp = temp.toFixed(2);
		        return temp + 'MB';
		    } else {
		        var temp = row.fileSize / (1024*1024*1024);
		        temp = temp.toFixed(2);
		        return temp + 'GB';
		    }
		}else{
			return "";
		}
	}
	//添加标签
	function plusAlias(info, type) {
		var fileId = $(info).parent().parent().parent().eq(0).children(0).eq(0).text();
		$("#aliasFileId").val(fileId);
		$("#aliasType").val(type);
		$("#labelVal").val("");
		$("#aliasId").val("")
		$("#selectAliasName").text("")
		aliasByUser(type);
		var aliasTable=document.getElementById('tb_alias')
		 if(type==1&&status=='false'){
			console.log(13)
			aliasTable.rows[0].style.display="none"
			aliasTable.rows[1].style.display=""
		}else{
			aliasTable.rows[0].style.display=""
			aliasTable.rows[1].style.display="none"
		} 
		$("#aliasModel").modal("show");
	}
	//点击名称查看文件
	var windowsindex=0;
	function showfile(file) {
		var fileId = $(file).parent().parent().children('td').eq(0).text();
		var secName = $(file).parent().parent().children('td').eq(4).text();
		var fileName = file.innerText;
		var fileSize=$(file).parent().parent().children('td').last().text();
		var filestr = fileName.substr(0, fileName.lastIndexOf(".") + 1);
		var fileType = fileName.replace(filestr, "");
		/*  if (sessionUser.secretlevel =="B") {
			var cont = updateCount(fileId);
			if (cont) {
				openFile(fileType, fileId);
			}
		}else if (sessionUser.secretlevel =="C"){
			if (secName != "机密") {
				var cont = updateCount(fileId);
				if (cont) {
					openFile(fileType, fileId);
				}
			} else {
				$.showErr("您没有此权限");
			}
		}else if (sessionUser.secretlevel =="D"){
			if (secName == "非密") {
				var cont = updateCount(fileId);
				if (cont) {
					openFile(fileType, fileId);
				}
			} else {
				$.showErr("您没有此权限");
			}
		}  */
		var cont = updateCount(fileId);
		if (cont) {
			openFile(fileType, fileId,fileSize);
		}
	}
	var pageofficeHeight= window.screen.height
	var pageofficeWidth= window.screen.width
	//根据文件类型判断打开文件方式
	function openFile(fileType, fileId,fileSize) {
		windowsindex++;
		cfileid=fileId;
		
		if (fileType == "pdf") {
			POBrowser.openWindowModeless("/pdf?fileId=" + fileId,"width="+pageofficeWidth+"px;height="+pageofficeHeight+"px;");
		} else if (fileType == "xls" || fileType == "xlsx") {
			window.location.href = '/office?url=html/list.html&fileId=' + fileId+'&state=1&tabsId='+tabsId
		} else if (fileType == "doc" || fileType == "docx" ||fileType == "ppt" || fileType == "pptx") {
			POBrowser.openWindowModeless("/word?type=0&fileId=" + fileId,
					"width="+pageofficeWidth+"px;height="+pageofficeHeight+"px;");
		} else if(fileType == "csv") {
			if(fileSize.indexOf('G')>=0){
				$("#csvOpenModel").modal("show");
			}else if(fileSize.indexOf('M')>=0){
				var shuzi =parseFloat(fileSize.substring(0,fileSize.indexOf('M')));
				//alert();
				//alert(windowsindex);
				if(shuzi>50.0){
					$("#csvOpenModel").modal("show");	
					
				}else{
					window.open('html/OpenCSV.html?fileId=' + fileId+'&type=0','newwindow'+windowsindex, 'height=600, width=800,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=no, status=no');
				}
				
			}else{
			//	window.location.href = 'html/OpenCSV.html?fileId=' + fileId+'&type=0'
				//window.open('html/OpenCSV.html?fileId=' + fileId+'&type=0');
				window.open('html/OpenCSV.html?fileId=' + fileId+'&type=0','newwindow'+windowsindex, 'height=600, width=800,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');		
			}
		}else if(fileType == "txt"||fileType == "TXT"||fileType == "OUT"||fileType == "out"||fileType == "ric"||fileType == "RIC"||fileType == "bin"||fileType == "BIN"){
			window.open('html/Opentxt.html?fileId='+fileId,'newwindow'+windowsindex, 'height=500, width=500,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
		}else if(fileType =="jpg"||fileType =="JPG"||fileType =="PNG"||fileType =="png"){
			 window.open("/openJpg?fileId="+fileId,'newwindow'+windowsindex, 'height=500, width=500,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
		}else if(fileType =="wmv"||fileType =="WMV"){
			 window.open("html/OpenVideo.html?fileId="+fileId,'newwindow'+windowsindex, 'height=500, width=500,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
		}else if(fileType =="MP4"||fileType =="mp4"){
			 window.open("html/OpenMp4.html?fileId="+fileId,'newwindow'+windowsindex, 'height=500, width=500,top=100, left=300, toolbar=no, menubar=no,scrollbars=no, resizable=no,location=n o, status=no');
		}else{
			$("#notOpenModel").modal("show");
		}
	}
	function showVers(obj) {
		console.log(obj)
	}
	//点击文件后更新文件点击次数
	function updateCount(fId) {
		var isSuccess;
		$.ajax({
			type : 'POST',
			url : "/updateCounts",
			async : false,
			data : {
				userId : sessionUser.userId,
				fileId : fId
			},
			success : function(data) {
				console.log(data)
				if (data != null && data > 0) {
					isSuccess = data;
				} else {
					isSuccess = 0;
				}
			}
		})
		return isSuccess;
	}
//获取页面参数
	function parseUrl() {
		var url = location.href;
		var i = url.indexOf('?');
		if (i == -1)
			return;
		var querystr = url.substr(i + 1);
		var arr1 = querystr.split('&');
		var str = new Array();
		var num = 0;
		for (i in arr1) {
			var ta = arr1[i].split('=');
			str[num] = decodeURI(ta[1]);
			num++;
		}
		return str;
	}
	//整理部门数据
	function getDeptData(array){
		for(var i=0;i<array.length;i++){
			//array[i].deleted=array[i].attributes.deleted
			//array[i].deptcode=array[i].attributes.deptcode
			array[i].name=array[i].deptName
			//array[i].parentcode=array[i].attributes.parentcode
			//array[i].type=array[i].attributes.type
			//delete array[i].attributes
			if(array[i].children != undefined && array[i].children.length>0){
				getDeptData(array[i].children)
			}else{
				delete array[i].children
			}
		}
		return array;
	}
	//添加已勾选的分享用户
	function allleft(){
		var getSelectRows = $("#tb_user").bootstrapTable('getSelections',
				function(row) {
					return row;
				});
		var rows = $('#tb_user').bootstrapTable('getData');
		/*  for(var i=0;i<tabledata.lenght;i++){
			for (j = 0; j < getSelectRows.length; j++) {
				if (tabledata[i].id == getSelectRows[j].id) {
					tabledata.splice(i, 1);
				}
			}
		}  */
		for (var i = 0; i < rows.length; i++) {
			for (j = 0; j < getSelectRows.length; j++) {
				if (rows[i].id == getSelectRows[j].id) {
					rows.splice(i, 1);
				}
			}
		}
		$("#tb_user").bootstrapTable('load', rows);
	}
	//删掉勾选分享用户事件
	function allright(){
		var getSelectRows = $("#tb_deptUser").bootstrapTable('getSelections',
				function(row) {
					return row;
				});
		console.log(getSelectRows.length)
		if(getSelectRows.length>0){
			for (var i = 0; i < getSelectRows.length; i++) {
				/* if(tabledata!=undefined&&tabledata.length>0){
					for (j = 0; j < unique(tabledata).length; j++) {
						if(getSelectRows[i].id!=unique(tabledata)[j].id){
							delete getSelectRows[i].ck
							tabledata.push(getSelectRows[i])
						}
					}
				}else{ */
					delete getSelectRows[i].ck
					tabledata.push(getSelectRows[i])
			//	}
				
			}
		console.log(tabledata)
		console.log(unique(tabledata))
			$("#tb_user").bootstrapTable('load', unique(tabledata));
		}else{
			console.log('请选择')
		}
	}
</script>
</head>
<style>
.bootstrap-table {
	background: #fff;
	border-radius: 5px;
	padding: 5px 10px 10px 10px;
}

#toolbar .btn {
	background: #0085ff;
}
</style>
<body style="padding: 0px;">
	<div id="box">
		<table id="tb_order" class="table table-bordered table-striped tablesorter"
			data-toggle="context" data-target="#context-menu">

		</table>
		<!-- <a href="#" style="color: #1963AA;" id="twices">在结果中搜索</a> -->
		<div id="toolbar" class="btn-group">
			<button type="button" class="btn btn-white btn-default"
				style="display:none" id="btn_delete" onclick="delbtn()">
				<span th:text="#{delete}"></span>
			</button>
			<button type="button" class="btn btn-white btn-default"
				style="display:none" id="uploadFile" onclick="uploadFile()">
				<span th:text="#{import}"></span>
			</button>
			<button type="button" class="btn btn-white btn-default"
				style="display:none" id="btn_down" onclick="downloadbtn()">
				<span th:text="#{download}"></span>
			</button>
			<button type="button" class="btn btn-white btn-default"
				onclick="collbtn()">
				<span th:text="#{collect}"></span>
			</button>
			<button type="button" class="btn btn-white btn-default"
				style="display:none" id="btn_move" onclick="moveBtn()">
				<span th:text="#{move}"></span>
			</button>
			<button type="button" class="btn btn-white btn-default"
				onclick="sharebtn()">
				<span th:text="#{share}"></span>
			</button>
			 <div class="input-group" style="display: inline-block;">
				<input type="text" class="form-control" id="searchInput"
					autocomplete="off" th:placeholder='#{searchText}'
					style="padding:16px 10px;width:220px;">
			</div>
			<button class="btn-default" onclick="searchFile()" type="button"
				style="padding: 5px 12px;display: inline-block;width: 40px !important;float:none !important; background: none !important;color: #333;border-radius: 5px;">
				<i class="icon-search"></i>
			</button> 
		</div>
		<!--添加标签开始-->
		<div class="modal fade" id="aliasModel" tabindex="-1" role="dialog">
			<div class="modal-dialog">
				<div class="modal-content" style=" width: 440px;">
					<div class="modal-header" style="height: 50px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title">添加标签</h4>
					</div>
					<div class="modal-body" style="padding: 0px 10px;">
						<div class="row">
							<div class="col-md-12" style="padding: 10px 0px;">
								<table id="tb_alias">
									<tr>
										<td><label style="margin-bottom: 15px;">创建新标签:</label></td>
										<td><input class="form-control" type="text" id="labelVal"
											autocomplete="off"
											style="display: inline; width: 180px;margin-bottom: 15px;" /></td>
									</tr>
									<tr>
										<td><span
											style="font-weight: bolder;margin-bottom: 15px;">您选择的标签:</span></td>
										<td><span id="selectAliasName"></span></td>
									</tr>
									<tr id="aliasUser">
										<td><label style="margin-top: 8px;">选择已有的标签:</label></td>
										<td><label id="myalias" style="margin-top: 8px;"></label></td>
									</tr>
									<tr>
										<td><input type="text" id="aliasFileId"
											style="display: none" /></td>
										<td><input type="text" id="aliasType"
											style="display: none" /><input type="text" id="aliasId"
											style="display: none" /></td>
									</tr>
								</table>
							</div>
						</div>
					</div>
					<div class="modal-footer" style="height: 70px;">
						<button type="button" class="btn new-tijiao queding"
							onclick="saveAlias()" th:text="#{submit}">保存</button>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!--添加标签结束-->
		<!--系统标签列表-->
		<div class="modal fade" id="aliaslistxitong" tabindex="-1"
			role="dialog">
			<div class="modal-dialog">
				<div class="modal-content" style=" width: 440px;">
					<div class="modal-header" style="height: 50px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title">系统标签</h4>
					</div>
					<div class="modal-body" style="padding: 0px 10px;">
						<div class="row">
							<div class="col-md-12" style="padding: 10px 0px;">
								<ul id="systree" class="ztree"
									style="margin: 10px 0px 0px; padding: 0px; width: 100%; height: 45%; "></ul>
							</div>
						</div>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!--添加标签结束-->
		<!--系统标签列表-->
		<div class="modal fade" id="aliaslistgeren" tabindex="-1"
			role="dialog">
			<div class="modal-dialog">
				<div class="modal-content" style=" width: 440px;">
					<div class="modal-header" style="height: 50px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title">个人标签</h4>
					</div>
					<div class="modal-body" style="padding: 0px 10px;">
						<div class="row">
							<div class="col-md-12" style="padding: 10px 0px;">
								<ul id="pertree" class="ztree"
									style="margin: 10px 0px 0px; padding: 0px; width: 100%; height: 45%;"></ul>
							</div>
						</div>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!--添加标签结束-->
		<!--收藏-->
		<div class="modal fade" id="folderModel" tabindex="-1" role="dialog"
			style="height: 550px;">
			<div class="modal-dialog" style="width: 500px;">
				<div class="modal-content">
					<div class="modal-header" style="height: 50px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title">文件收藏</h4>
					</div>
					<div class="modal-body" style="padding: 0px 10px;">
						<div class="row">
							<div class="col-md-8  col-md-offset-2">
								<!-- <table>
									<tr>
										<td><label>收藏:</label></td>
										<td><select class="form-control" id="folder">
												<option v-for="(item,index) in folder" :value="item.folderId">{{
													item.folderName}}</option>
										</select></td>
									</tr>
								</table> -->
								<ul id="folder" class="ztree"></ul>
							</div>
						</div>
					</div>
					<div class="modal-footer" style="height: 70px;">
						<button type="button" class="btn new-tijiao queding"
							onclick="selectFolder()" th:text="#{submit}">保存</button>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!--收藏-->
		<!--文件打不开-->
		<div class="modal fade" id="notOpenModel" tabindex="-1" role="dialog"
			style="height: 550px;">
			<div class="modal-dialog" style="width: 700px;">
				<div class="modal-content">
					<div class="modal-header" style="height: 50px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title">无法打开文件</h4>
					</div>
					<div class="modal-body" style="padding: 0px 10px;">
						<h2>无法在线打开，请下载后选择本地软件打开</h2>

					</div>
					<div class="modal-footer" style="height: 70px;">
						<button type="button" class="btn new-tijiao queding">打开</button>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!--文件打不开-->

		<!--csv文件提示-->
		<div class="modal fade" id="csvOpenModel" tabindex="-1" role="dialog"
			style="height: 550px;">
			<div class="modal-dialog" style="width: 700px;">
				<div class="modal-content">
					<div class="modal-header" style="height: 50px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title"></h4>
					</div>
					<div class="modal-body" style="padding: 0px 10px;">
						<h2>因文件过大提供两种方式进行打开文件(全部打开可能会出现加载较慢的情况)</h2>

					</div>
					<div class="modal-footer" style="height: 70px;">
						<button type="button" class="btn new-tijiao" id="yulandakai">预览打开</button>
						<button type="button" class="btn new-tijiao" id="wanquanjiazai">全部打开</button>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!--文件提示-->

		<!--文件移动-->
		<div class="modal fade" id="moveFileModel" tabindex="-1" role="dialog"
			style="height: 550px;">
			<div class="modal-dialog modal-sm" style="width: 700px;">
				<div class="modal-content">
					<div class="modal-header" style="height: 50px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title">数据文件移动</h4>
					</div>
					<div class="modal-body" style="padding: 0px 10px;">
						<ul id="tree" class="ztree"></ul>
					</div>
					<div class="modal-footer" style="height: 70px;">
						<button type="button" class="btn new-tijiao queding"
							onclick="moveSave()">移动</button>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!--文件移动-->
		<!-- 分享弹出窗口begin -->
		<div class="modal fade" id="shareModal" tabindex="-1" role="dialog"
			aria-hidden="true" style="height: 550px;">
			<div class="modal-dialog" style="width: 800px;">
				<div class="modal-content">
					<div class="modal-header" style="padding:8px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title">选择用户</h4>
					</div>
					<div class="modal-body" style="height: 500px;">
						<div style="width:100%;height:100%;">
							<input type="text" id="roleUser" style="display:none" />
							<div
								style="width:20%;height:100%;float: left;border-right: 1px solid rgb(204, 204, 204);overflow: auto;">
								<ul class="ztree" id="deptTree"></ul>
							</div>
							<div
								style="width:40%;height:100%;float: left;border-right: 1px solid rgb(204, 204, 204);overflow: auto;"
								id="div_deptUser">
								<table id="tb_deptUser" style="height:100%;width:100%"></table>
							</div>
							<div
								style="float: left;width:5%;height:100%;float: left;border-right: 1px solid rgb(204, 204, 204); overflow: auto;">
								<div style="position: relative;top:30%">
									<img onclick="allleft()" src="../assets/images/allleft.png" />
									<!-- <img onclick="" src="../assets/images/left.png"/>
								<img onclick="" src="../assets/images/right.png"/> -->
									<img onclick="allright()" src="../assets/images/allright.png" />
								</div>
							</div>
							<div style="float: left;height:100%;width:35%;overflow: auto;"
								id="div_user">
								<table id="tb_user" style="height:100%;width:100%"></table>
							</div>
						</div>
					</div>
					<div class="modal-footer" style="padding:5px;">
						<button type="button" class="btn new-tijiao queding"
							onclick="shareMessage()">分享</button>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!-- 分享弹出窗口end -->
		<!-- 上传文件弹出窗口begin -->
		<div class="modal fade" id="fileModal" tabindex="-1" role="dialog"
			aria-labelledby="addRoleLabel" aria-hidden="true"
			style="height: 550px;">
			<div class="modal-dialog" style="width: 624px;">
				<div class="modal-content">
					<div class="modal-header" style="padding:8px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title" id="addRoleLabel">上传文件</h4>
					</div>
					<div class="modal-body">
						<table style="width: 100%;">
							<tbody>
								<tr>
									<td id="pluploader" colspan="3">
										<p>你的浏览器不支持 Flash, Silverlight, Gears, BrowserPlus 或者
											HTML5</p>
									</td>
								</tr>
							</tbody>
						</table>
						<table
							style="    position: relative;
    left: 70%;
    margin: 10px 0 10px -117px;">
							<tr>
								<td style="text-align: center;vertical-align: middle;"><span
									style="color:red;">*</span></td>
								<td><select class="form-control" id="securityId">
										
								</select></td>
								<td>
									<button type="button" class="btn new-tijiao queding"
										style=" box-shadow: 2px 3px 10px #ccc;   margin-left: 12px;"
										id="saveControl">开始上传</button>
								</td>
							</tr>
						</table>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!-- 上传文件弹出窗口end -->
		<!--文件已存在-->
		<div class="modal fade" id="exitsFileModel" tabindex="-1"
			role="dialog" style="height: 550px;">
			<div class="modal-dialog" style="width: 700px;">
				<div class="modal-content">
					<div class="modal-header" style="height: 50px;">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title">上传提示</h4>
					</div>
					<div class="modal-body" style="padding: 50px;text-align: center;">
						<h3 style="margin: 0px auto;">文件已上传</h3>
					</div>
					<div class="modal-footer" style="height: 70px;">
						<button type="button" class="btn new-tijiao queding"
							onclick="freshBtn()">生成新版本</button>
						<button type="button" class="btn new-tijiao queding"
							onclick="coverBtn()">覆盖</button>
						<!-- <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button> -->
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>
		<!--文件已存在-->
	</div>

</body>
<script>
	$.showConfirm = function(str, funcok, title,confirm) {
		BootstrapDialog.confirm({
			title : title,
			message : str,
			type : BootstrapDialog.TYPE_WARNING,
			closable : true, // 点击对话框以外的页面内容可关闭
			//draggable : true, // 可拖拽
			btnOKLabel : confirm,
			btnOKClass : 'btn-warning',
			size : BootstrapDialog.SIZE_SMALL,
			// 对话框关闭的时候执行方法
			onhide : title,
			callback : function(result) {
				if (result) {
					$.post("/recycleFiles", {
						fileIds : funcok
					}, function(data) {
						if (data != null) {
							deleteSuccess()
							//$('#tb_order').bootstrapTable('refresh');
							$("#tb_order").bootstrapTable('load', tableAll());
						}
					});
				}
			}
		});
	};

	var uploader,tabsId;
	$(function() {
		$.ajax({
			type : 'POST',
			url : "/getFilesByTabsid",
			async : false,
			dataType : "json",
			success : function(data) {
				tabsId=data.tabsId;
			}
		})
		$.ajax({
			type : 'POST',
			url : "/fileVersion",
			data : {
				"state" : 2
			},
			async : false
		});
		uploader = $("#pluploader").pluploadQueue({
			runtimes : 'html5,flash,silverlight,html4',
			url : '/pluploadUpload',
			//multi_selection:false,
			//分片上传文件时，每个文件大小
			chunk_size : '100mb',
			multipart :true ,
			unique_names : false,
			multiple_queues : true,
			//是否支持拖拽上传
			dragdrop : true,
			// 对将要上传的图片进行压缩
			/* resize : {
				width : 320,
				height : 240,
				quality : 90
			}, */
			rename : false,//点击标题时，是否可以重命名
			sortable : true,
			flash_swf_url : '../assets/js/upload/Moxie.swf',
			silverlight_xap_url : '../assets/js/upload/Moxie.xap',
			init : {
				BeforeUpload:function(up, file){
					//uploader.settings.url = "/pluploadUpload?securityId=" + $("#securityId").val()+"&file="+file;
					uploader.settings.url = "/pluploadUpload?securityId=" + $("#securityId").val()+"&fileSize="+file.origSize+"&tabsId="+tabsId;
					console.log(uploader.settings.url)
					console.log(file.origSize)
					console.log("上传前的事件")
				},
				FileUploaded : function(up, file, info) {
					$("#tb_order").bootstrapTable('load', tableAll());
					$("#fileModal").modal("hide");
					getSecurity();
				},
				UploadComplete : function( uploader,files ) {
                    console.log("所有文件上传完毕");
                },
				Error : function(up, args) {
					//发生错误
					if (args.file) {
						
					} else {
						//alert('[error]' + args);
						uploadErr()
					}
				}
			}
		});
		//if (user[0].security.securityId != 1) {
			//隐藏上传按钮
			$('.plupload_start').attr('style', 'display:none');
			//$('.plupload_add').attr('style', 'display:none');
		//}
		//上传文件窗口关闭，窗口内容清除
			 $('#fileModal').on('hide.bs.modal', function () {
				 uploader.splice();
			});
			 //开始上传文件按钮点击事件
		$("#saveControl").on('click', function() {
			//uploader.start()
			var isSelect=$("#securityId").val();
			console.log(isSelect);
			if(isSelect!=0){
				if(uploader.files.length==0){
					//$.showErr("未选择文件");
					nullErr()
				}else{
				var filesName=[];
				for(var i=0;i<uploader.files.length;i++){
					filesName.push(uploader.files[i].name)
				}
				 $.ajax({
					url : '/existFile', //提交给哪个执行 
					data : {
						filesName : filesName,
						tabsId:tabsId
					},
					type : 'POST',
					success : function(data) {
						if (data == null || data == "") {
							uploader.start();
						} else {
							console.log(123)
							$("#exitsFileModel").modal("show");
						}
					}
				}); 
				}
			}else{
				selectedErr()
			}
		});
	});

	//加载分享文件时部门数据
	function DataAll() {
	$.ajax({
			type : 'POST',
			url : "/getDeptAll",
			datatype : "json",
			success : function(data) {
				console.log(data)
				$.fn.zTree.init($("#deptTree"), settingUser, getDeptData(data));
			}
		})
	}
			//移动按钮点击事件
			  function moveBtn() {
				var getSelectRows = $("#tb_order").bootstrapTable(
						'getSelections', function(row) {
							return row;
						});
				if (getSelectRows.length == 0) {
					nullErr();
				} else {
					$("#moveFileModel").modal("show");
				}
			}
			//收藏按钮点击事件
			 function collbtn() {
				var getSelectRows = $("#tb_order").bootstrapTable(
						'getSelections', function(row) {
							return row;
						});
				if (getSelectRows.length == 0) {
					nullErr();
				} else {
					if($.fn.zTree.getZTreeObj("folder").getNodes().length>0){
						$("#folderModel").modal("show");
					}else{
						folderEmptyErr();
					}
				}
			}
			//收藏确认按钮点击事件
			 function selectFolder() {
				var fileIdAll = [];
				var treeObj = $.fn.zTree.getZTreeObj("folder");
				var trees = treeObj.getCheckedNodes(true)
				var getSelectRows = $("#tb_order").bootstrapTable(
						'getSelections', function(row) {
							return row;
						});
				for (i = 0; i < getSelectRows.length; i++) {
					fileIdAll.push(getSelectRows[i].fileId)
				}
				$.post("/insertCollectFile", {
					fileIds : fileIdAll,
					folderId : trees[0].folderId
				}, function(data) {
					if (data == "ok") {
						$("#folderModel").modal("hide");
						//$.showSuccessTimeout("收藏成功");
						collectSuccess()
						$('#tb_order').bootstrapTable('refresh');
					} else if (data == "exist") {
						$("#folderModel").modal("hide");
						//$.showErr("您已收藏");
						collectErr()
						$('#tb_order').bootstrapTable('refresh');
					}
				});
			}
			//标签确认按钮点击事件
			 function saveAlias() {
				 var aliasName;
				 /* if(status=='false'){
						aliasName=$("#selectAliasName").text()
					}else{
						aliasName=$("#labelVal").val()
					} */
					if($("#labelVal").val()!=""){
						aliasName=$("#labelVal").val();
					}else{
						aliasName=$("#selectAliasName").text()
					}
					console.log(aliasName)
					console.log($("#aliasId").val())
				$.ajax({
					type : 'POST',
					url : "/insertAlias",
					data : {
						aliasName : aliasName,
						fileId : $("#aliasFileId").val(),
						aliasType : $("#aliasType").val(),
						aliasId:$("#aliasId").val()
					},
					success : function(data) {
						if (data != 0 || data != " ") {
							$("#aliasModel").modal("hide");
							$("#tb_order").bootstrapTable('load', tableAll());
							//$.showSuccessTimeout("添加标签成功");
							addSuccess()
						} else {
							//$.showErr("已添加过");
							aliasErr()
						}
					}
				})
			}
			//删除按钮点击事件
			 function delbtn() {
				var fileIdAll = [];
				var getSelectRows = $("#tb_order").bootstrapTable(
						'getSelections', function(row) {
							return row;
						});
				if (getSelectRows.length == 0) {
					nullErr();
				} else {
					for (i = 0; i < getSelectRows.length; i++) {
						fileIdAll.push(getSelectRows[i].fileId)
					}
					if (lang != "en_US") {
						$.showConfirm("<i style='color: red;position: relative;top: 2px;font-size: 27px;left: -6px;' class='icon-remove new-icon'></i>确认要删除吗？", fileIdAll,"删除文件","确认");
					}else{
						$.showConfirm("<i style='color: red;position: relative;top: 2px;font-size: 20px;left: -6px;' class='icon-remove new-icon'></i>Are you sure you want to delete it?", fileIdAll,"DeleteFile","confirm");
					}
				}
			}
			//下载按钮点击事件
			 function downloadbtn() {
				var fileIdAll = [];
				var getSelectRows = $("#tb_order").bootstrapTable(
						'getSelections', function(row) {
							return row;
						});
				if (getSelectRows.length == 0) {
					nullErr();
				} else {
					for (i = 0; i < getSelectRows.length; i++) {
						fileIdAll.push(getSelectRows[i].fileId)
					}
					  if (getSelectRows.length == 1) {
						var param = {
							fileId : getSelectRows[0].fileId
						};
						console.log(getSelectRows[0].fileId)
						window.location.href = "/download?fileId="+ getSelectRows[0].fileId;
						//$.get("/download", param, function(result) {});
					} else {
						console.log(fileIdAll)
						window.location.href = "/downloadFiles?fileIds="+fileIdAll;
					}  
				}
			}
			//搜索按钮点击事件
			 function searchFile() {
				 console.log(123)
				$("#tb_order").bootstrapTable('destroy');
				//$("#tb_order").bootstrapTable('load', tableAll());
				tableData(tableAll());
				getSecurity();
				//tableData();
				//tableData(tableAll());
			}
		//移动确认按钮点击事件
			 function moveSave() {
				 var fileIdAll=[];
				var treeObj = $.fn.zTree.getZTreeObj("tree");
				var trees = treeObj.getCheckedNodes(true)
				var getSelectRows = $("#tb_order").bootstrapTable(
						'getSelections', function(row) {
							return row;
						});
				var tabsId = trees[0].id;
				var menuId = trees[0].menuid;
				for (j = 0; j < getSelectRows.length; j++) {
					fileIdAll.push(getSelectRows[j].fileId)
				}
				$.ajax({
					type : 'POST',
					url : "/updateFilesId",
					data : {
						tabsId : tabsId,
						menuId : menuId,
						fileIds : fileIdAll
					},
					success : function(data) {
						if (data != 0 || data != " ") {
							$("#tb_order").bootstrapTable('load', tableAll());
							$("#moveFileModel").modal("hide");
							fileMoveSuccess()
						} else {
							fileMoveErr()
						}
					}
				})
			}
		//分享按钮点击事件
			 function sharebtn() {
				 var dataRows = $("#tb_order").bootstrapTable('getSelections',
						function(row) {
							return row;
						});
				if (dataRows.length == 0) {
					nullErr();
				} else {
					$("#shareModal").modal("show");
					
				} 
			}
		//分享确认按钮点击事件
			 function shareMessage() {
				var userRows = $('#tb_user').bootstrapTable('getData');
				var dataRows = $("#tb_order").bootstrapTable('getSelections',
						function(row) {
							return row;
						});
				var dataAll = [];
				 	for (i = 0; i < userRows.length; i++) {
						var fileIdAll = [];
							for (j = 0; j < dataRows.length; j++) {
								fileIdAll.push(dataRows[j].fileId)
							}
							dataAll.push({
								"userId" : userRows[i].userId,
								"dataFile" : fileIdAll
							})
					
					}
					$.ajax({
						type : 'POST',
						url : "/insertMessage",
						data : {
							dataAll : JSON.stringify(dataAll)
						},
						success : function(data) {
							console.log(data)
							if (data == "ok") {
								$('#shareModal').modal('hide');
								shareSuccess()
								$("#tb_order").bootstrapTable('refresh');
							}else{
								shareErr()
							}
						}
					}) 
			}
		//备注字段点击事件
			 function editBtn() {
				var dataRows = $("#tb_order").bootstrapTable('getSelections',
						function(row) {
							return row;
						});
				if (dataRows.length == 0) {
					nullErr();
				} else if (dataRows.length == 1) {
					$("#remark").val(dataRows[0].remark)
					$("#editRemark").modal("show");
				} else {
					oneErr();
				}
			}
		//备注确认按钮点击事件
			 function updateRemark() {
				var getSelectRows = $("#tb_order").bootstrapTable(
						'getSelections', function(row) {
							return row;
						});
				$.ajax({
					type : 'POST',
					url : "/updateRemark",
					data : {
						fileId : getSelectRows[0].fileId,
						remark : $("#remark").val()
					},
					success : function(data) {
						if (data != null || data != "") {
							$('#editRemark').modal('hide');
							updateSuccess()
							$("#tb_order").bootstrapTable('load', tableAll());
						}
					}
				})
			}
		//导入文件按钮点击事件
		function uploadFile(){
				$("#fileModal").modal("show");
			}
			//上传文件覆盖文件
			function coverBtn() {
				$.ajax({
					type : 'POST',
					url : "/fileVersion",
					data : {
						"state" : 0
					},
					async : false
				});
				$("#exitsFileModel").modal("hide");
				uploader.start();
			}
			//上传文件生产新的版本
			function freshBtn(){
				$.ajax({
					type : 'POST',
					url : "/fileVersion",
					data : {
						"state" : 1
					},
					async : false
				});
				$("#exitsFileModel").modal("hide");
				uploader.start();
			}
		//点击按钮颜色改变
	 $("#toolbar").find('.btn').bind('click',function () {
			$(this).css("background","#cc7003");
		});
		//关闭模态框按钮颜色还原
	 $('.modal').on('hide.bs.modal', function () {
		 $(".btn").css("background","#0085ff")
	});
</script>
</html>
